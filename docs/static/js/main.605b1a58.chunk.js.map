{"version":3,"sources":["img/logo.jpg","components/ErrorComponent.js","components/ErrorBoundary.js","components/BottomNavComponent.js","components/HomeComponent.js","components/NotesComponent.js","redux/ActionCreators/notesActions.js","redux/actionTypes.js","components/EditNoteComponent.js","components/FilesGridComponent.js","baseUrl.js","components/Dialogs/UploadDialog.js","components/Dialogs/DeleteDialog.js","components/Dialogs/DownloadDialog.js","redux/ActionCreators/filesActions.js","components/FilesComponent.js","components/DrawerComponent.js","components/MainComponent.js","redux/ActionCreators/uiActions.js","redux/reducers/index.js","redux/reducers/notes.js","redux/reducers/files.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","img","maxWidth","width","errorText","textAlign","padding","freepik","color","textDecoration","ErrorComp","props","classes","errorTitle","error","type","errorImg","Typography","variant","className","typographyTitle","src","alt","Link","href","message","split","map","i","key","ErrorBoundary","state","hasError","errorStack","errorInfo","this","setState","componentStack","children","React","Component","pathMap","BottomNav","pathIndex","Box","boxShadow","stickToBottom","BottomNavigation","showLabels","value","onChange","event","newValue","BottomNavigationAction","label","icon","component","RouterLink","to","nextProps","prevState","pathname","location","withRouter","withStyles","position","bottom","Home","onClickSave","mainNote","notes","items","filter","n","isMainNote","postNote","content","selfDestruct","onClickClear","onChangeContent","target","HomeNote","Card","card","CardContent","TextField","fullWidth","id","placeholder","multiline","rows","InputProps","underline","CardActions","cardActions","Button","onClick","undefined","isLoading","Container","Backdrop","backdrop","open","CircularProgress","IconButton","handleThemeToggle","themeButton","gutterBottom","theme","textarea","border","overflow","overflowWrap","resize","height","zIndex","drawer","marginTop","borderBottom","top","right","root","backgroundColor","palette","background","paper","paddingBottom","spacing","fab","destructText","light","NotesList","timeFormater","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","notesItems","note","List","ListItem","button","divider","_id","ListItemText","primary","title","secondary","format","Date","parse","updatedAt","ListItemSecondaryAction","hoursTillDestruct","diff","now","hours","mins","Math","round","floor","timeToLive","Notes","LinearProgress","Fab","aria-label","sleep","ms","Promise","resolve","setTimeout","loadingNotes","loadingState","payload","errorNotes","loadNotes","dispatch","then","random","response","editNote","addNote","catch","DeleteDialog","Dialog","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogActions","handleDelete","autoFocus","EditNote","onChangeSelfDestruct","touched","onChangeTitle","newNote","onClickTrash","deleteDialogOpen","handleCloseDeleteDialog","match","params","noteId","deleteNote","history","goBack","noteNotFound","paramId","Error","path","saveBottom","space","FormControl","margin","formControl","InputLabel","Select","labelId","MenuItem","iconToRight","connect","noteID","deleteNoteFromStore","marginBottom","minWidth","selectEmpty","marginLeft","deleteIcon","lockIcon","success","main","cardContent","cardMedia","objectFit","typography","whiteSpace","textOverflow","FILE_KNOWN_EXT","filenameToExtImg","filename","ext","pop","toUpperCase","find","e","FilesGrid","dateFormater","Grid","container","file","item","xs","sm","Tooltip","originalname","arrow","CardActionArea","CardMedia","image","Divider","disableSpacing","encrypted","size","openDownloadDialog","bytes","decimals","k","dm","sizes","log","parseFloat","pow","toFixed","fileSizeToString","openDeleteDialog","destroyAt","UploadDialog","handleChange","console","formValues","name","checked","files","handleValidation","formErrors","formValidity","length","encryptChecked","password","handleSubmit","preventDefault","Object","values","every","Boolean","postFiles","isSubmitting","closeButton","onSubmit","DialogContent","TopDialogContent","multiple","hidden","input","htmlFor","uploadFilesButton","FormControlLabel","control","Checkbox","disabled","helperText","paddingTop","grey","DialogContentText","fileId","DownloadDialog","method","action","loadingFiles","errorFiles","loadFiles","Files","closeDialog","dialogName","openUploadDialog","uploadDialog","deleteDialog","downloadDialog","deleteFile","fetchFiles","upload","startIcon","json","uploadFormValues","uploadForm","data","FormData","append","addFile","fileID","deleteFileFromStore","display","flexShrink","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","toggleButton","SideDrawer","useTheme","useState","openDrawer","setOpenDrawer","handleDrawerToggle","Drawer","clsx","logo","ListItemIcon","darkTheme","createMuiTheme","lightTheme","Main","ui","setThemeDark","setThemeLight","HomeWithProps","NotesPage","orientation","flexItem","fetchNotes","window","matchMedia","matches","ThemeProvider","basename","CssBaseline","exact","withWidth","flexGrow","combineReducers","concat","createStore","rootReducer","applyMiddleware","thunk","logger","App","store","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.605b1a58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6cd4726c.jpg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles({\r\n img: {\r\n    maxWidth:'300px',\r\n    width: '100%'\r\n },\r\n errorText: {\r\n    textAlign: 'left',\r\n    padding: '8px'\r\n },\r\n freepik: {\r\n    color: 'grey',\r\n    textDecoration: 'none',\r\n    '&&:hover': {\r\n        textDecoration: 'underline',\r\n    }\r\n }\r\n});\r\n\r\nfunction ErrorComp(props) {\r\n    const classes = useStyles();\r\n    \r\n    const errorTitle = props.error.type === 'connection' ? \"Can't reach server...\" : \"Something went wrong...\";\r\n    const errorImg = props.error.type === 'connection' ? \"/server-error.png\" : \"/error.png\";\r\n\r\n\treturn (\r\n        <div>\r\n            <Typography variant=\"subtitle1\" className={classes.typographyTitle}>{errorTitle}</Typography>\r\n            <br />\r\n            <img src={errorImg} alt=\"Error\" className={classes.img}></img>\r\n            <br />\r\n            <Link href=\"http://www.freepik.com\" variant='caption' >Designed by Freepik</Link>\r\n            <br />\r\n            <br />\r\n            <Typography>\r\n                {props.error.message.split(\"\\n\").map((i, key) => {\r\n                    return <p key={key}>{i}</p>;\r\n                })}\r\n            </Typography>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default ErrorComp;","import React from 'react';\r\nimport ErrorComp from './ErrorComponent';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n          hasError: false,\r\n          error: '',\r\n          errorStack: '', \r\n        };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return { hasError: true, error: error };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      this.setState({\r\n        error: error,\r\n        errorStack: errorInfo.componentStack\r\n      });\r\n      // TODO: log error to server\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // render fallback UI\r\n        return(\r\n            <div>\r\n                <br /><br />\r\n                <ErrorComp error={this.state.error}/>\r\n            </div>\r\n        );\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport PermMediaIcon from '@material-ui/icons/PermMedia';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst styles = {\r\n\tstickToBottom: {\r\n\t\twidth: '100%',\r\n\t\tposition: 'fixed', // try: sticky or absolute\r\n\t\tbottom: 0,\r\n\t},\r\n};\r\n\r\nconst pathMap = {\r\n\t'/':\t \t0,\r\n\t'/Home':\t0,\r\n\t'/notes':\t1,\r\n\t'/files':\t2,\r\n}\r\n\r\nclass BottomNav extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tpathIndex: 0,  // Current page index\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\r\n\t\tconst {pathname} = nextProps.location;\r\n\t\tconst newPathIndex = pathMap[pathname];\r\n\t\treturn { pathIndex: newPathIndex };\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t\t<Box boxShadow={2} className={classes.stickToBottom} >\r\n\t\t\t<BottomNavigation showLabels\r\n\t\t\tvalue={this.state.pathIndex}\r\n\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\tthis.setState({ pathIndex: newValue });\r\n\t\t\t}}>\r\n\t\t\t<BottomNavigationAction label=\"Home\" icon={<HomeIcon />}\r\n\t\t\tcomponent={RouterLink} to='/' />\r\n\t\t\t<BottomNavigationAction label=\"Notes\" icon={<NotesIcon />}\r\n\t\t\tcomponent={RouterLink} to='/notes' />\r\n\t\t\t<BottomNavigationAction label=\"Files\" icon={<PermMediaIcon />}\r\n\t\t\tcomponent={RouterLink} to='/files' />\r\n\t\t\t</BottomNavigation>\r\n\t\t\t</Box>\r\n\t\t\t);\r\n\t}\r\n}\r\nexport default withRouter(withStyles(styles)(BottomNav));","import React, { Component } from 'react';\r\nimport ErrorComp from './ErrorComponent';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\nconst styles =  (theme) => ({\r\n\ttextarea: {\r\n\t  border: 'none',\r\n\t  overflow: 'hidden',\r\n\t  overflowWrap: 'break-word',\r\n\t  resize: 'none',\r\n\t  height: '400px',\r\n\t  width:'100%'\r\n\t},\r\n\tbackdrop: {\r\n\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\tcolor: '#fff',\r\n\t},\r\n\ttypographyTitle: {\r\n\t  marginTop:'16px'\r\n\t},\r\n\tunderline: {\r\n\t\t\"&&&:before\": {\r\n\t\t\tborderBottom: \"none\"\r\n\t\t},\r\n\t\t\"&&:after\": {\r\n\t\t\tborderBottom: \"none\"\r\n\t\t}\r\n\t},\r\n\tthemeButton: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: '8px',\r\n\t\tright: '8px',\r\n\t},\r\n});\r\n\r\nclass Home extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcontent: null,\r\n\t\t\tselfDestruct:'',\r\n\t\t };\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\r\n\t\tvar mainNote = nextProps.notes.items.filter(n => n.isMainNote)[0];\r\n\t\tif(prevState.content == null && mainNote){\r\n\t\t\treturn {\r\n\t\t\t\tcontent: mainNote.content,\r\n\t\t\t};\r\n\t\t }\r\n\t\t else\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\r\n\r\n\tonClickSave = () =>{\r\n\t\tconst mainNote = this.props.notes.items.filter(n => n.isMainNote)[0]\r\n\t\tthis.props.postNote({ ...mainNote,\r\n\t\t\tcontent: this.state.content,\r\n\t\t\tselfDestruct: this.state.selfDestruct,\r\n\t\t\tisMainNote: true\r\n\t\t});\r\n\t}\r\n\r\n\tonClickClear = () =>{\r\n\t\tthis.setState({content: ''});\r\n\t}\r\n\r\n\tonChangeContent = event => {\r\n\t\tthis.setState({content: event.target.value});\r\n\t};\r\n\r\n\tisLoading(){\r\n\t\treturn (this.props.notes.isLoading === undefined || this.props.notes.isLoading);\r\n\t}\r\n\r\n\tHomeNote = (props) => {\r\n\t\treturn(\r\n\t\t\t<Card className={props.classes.card} variant=\"outlined\">\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t<TextField  fullWidth\r\n\t\t\t\t\t\tid=\"content\"\r\n\t\t\t\t\t\tplaceholder=\"Type something...\"\r\n\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\trows=\"16\"\r\n\t\t\t\t\t\tInputProps={{ className: props.classes.underline }} \r\n\t\t\t\t\t\tonChange={this.onChangeContent} value={this.state.content}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* <textarea className={classes.textarea} placeholder='Type something...'\r\n\t\t\t\t\t\tonChange={e => this.updateInput(e.target.value)} value={this.state.input} >\r\n\t\t\t\t\t</textarea> */}\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions className={props.classes.cardActions}>\r\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\"\r\n\t\t\t\t\t\tonClick={this.onClickSave}>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button color=\"primary\" onClick={this.onClickClear}>\r\n\t\t\t\t\t\tClear\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n\t\r\n\trender() {\r\n\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<Container maxWidth=\"sm\">\r\n\t\t\t\t<Backdrop className={classes.backdrop} open={this.props.notes.isLoading}>\r\n\t\t\t\t\t<CircularProgress color=\"inherit\" />\r\n\t\t\t\t</Backdrop>\r\n\t\t\t\t<IconButton onClick={this.props.handleThemeToggle} className={classes.themeButton}>\r\n\t\t\t\t\t<Brightness4Icon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Typography variant=\"h2\" gutterBottom className={classes.typographyTitle}>Local Box</Typography>\r\n\t\t\t\t{ this.props.notes.error\r\n\t\t\t\t\t? <ErrorComp error={this.props.notes.error}/>\r\n\t\t\t\t\t: <this.HomeNote classes={classes}/> }\r\n\t\t\t</Container>\r\n\t\t);\r\n\r\n\t}\r\n}\r\nexport default withStyles(styles)(Home);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ErrorComp from './ErrorComponent'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      paddingBottom: (56 + theme.spacing(2))*2,\r\n      height: '100vh'\r\n    },\r\n    typographyTitle: {\r\n      textAlign: 'left',\r\n      padding: theme.spacing(2, 2, 0),\r\n    },\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: 56 + theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n    destructText: {\r\n      color: theme.palette.error.light,\r\n    },\r\n\r\n    img: {\r\n      maxWidth:'300px',\r\n      width: '100%'\r\n   },\r\n   errorText: {\r\n      textAlign: 'left',\r\n      padding: '8px'\r\n   },\r\n\r\n  }));\r\n\r\nconst NotesList = ({notes}) => {\r\n  const classes = useStyles();\r\n\r\n  const timeFormater = new Intl.DateTimeFormat('default', {\r\n    year: 'numeric', month: 'numeric', day: 'numeric',\r\n    hour: 'numeric', minute: 'numeric', \r\n    hour12: false,\r\n  });\r\n  const notesItems = notes.items.filter(note => !note.isMainNote);\r\n\r\n  function timeToLive(updatedAt, hoursTillDestruct){\r\n    const destroyAt = new Date(Date.parse(updatedAt) + hoursTillDestruct*60*60*1000);\r\n    // time untill destruct in miniutes;\r\n    var diff = (destroyAt - Date.now()) / 60000\r\n    var hours = diff/60, mins = Math.round(diff%60);\r\n    if(hours <= 1){\r\n      return mins + 'min';\r\n    }\r\n    else if(hours >= 11.5 || mins === 0 ){ // the time is more then 11 hours\r\n      return Math.round(hours) + ' hours';\r\n    }\r\n    else{\r\n      return Math.floor(hours) + 'h ' + mins + 'min'\r\n    }\r\n  }\r\n\r\n  return(\r\n    <List>\r\n      { notesItems.map(note => (\r\n        <ListItem button divider key={note._id}\r\n          component={RouterLink} to={`/notes/${note._id}`}>\r\n          <ListItemText\r\n          primary={note.title}\r\n          secondary={timeFormater.format(new Date(Date.parse(note.updatedAt)))}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <Typography variant=\"caption\" className={classes.destructText} >\r\n              Delete in<br/>\r\n              {timeToLive(note.updatedAt, note.selfDestruct)}\r\n            </Typography>   \r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        )) } \r\n    </List>\r\n  );\r\n}\r\n\r\n\r\nexport default function Notes({notes}) {\r\n    const classes = useStyles();\r\n\r\n    if( notes.error !== null ){\r\n      // render the error component instead of the notes list\r\n      return(\r\n        <div className={classes.root}>\r\n          <Typography variant=\"h4\" gutterBottom className={classes.typographyTitle}>Notes</Typography>\r\n          <ErrorComp error={notes.error}/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return(\r\n      <div className={classes.root}>\r\n        <Typography variant=\"h4\" gutterBottom className={classes.typographyTitle}>Notes</Typography>\r\n        {notes.isLoading ? <LinearProgress />: <NotesList notes={notes} />}\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}\r\n            component={RouterLink} to='/newNote'>\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n    );\r\n}","import * as ActionTypes from '../actionTypes';\r\nimport { baseUrl } from '../../baseUrl';\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n\r\n// Action Creators:\r\n\r\nexport const editNote = (note) => ({\r\n    type: ActionTypes.EDIT_NOTE,\r\n    payload: note\r\n})\r\n\r\nexport const loadingNotes = loadingState => ({\r\n  type: ActionTypes.LOADING_STATE_NOTES,\r\n  payload: loadingState\r\n})\r\n\r\nexport const errorNotes = error => ({\r\n  type: ActionTypes.ERROR_NOTES,\r\n  payload: error\r\n})\r\n\r\nexport const fetchNotes = (id) => dispatch => {\r\n    dispatch(loadingNotes(true))\r\n    var url = id ? baseUrl + 'api/notes/' + id : baseUrl + 'api/notes/';\r\n    return sleep(1000)\r\n    .then(() => {\r\n      return [{\r\n        \"selfDestruct\": null,\r\n        \"isMainNote\": true,\r\n        \"_id\": \"5ea0ac00036b3e587cab774b\",\r\n        \"content\": \"\",\r\n        \"createdAt\": \"2020-04-22T20:41:36.258Z\",\r\n        \"updatedAt\": \"2020-09-05T10:58:54.281Z\",\r\n      },\r\n      {\r\n        \"selfDestruct\": 72,\r\n        \"isMainNote\": false,\r\n        \"_id\": \"5f53b32431b5cb81a4dd1d0c\",\r\n        \"title\": \"README\",\r\n        \"content\": \"Local-Box\\nStore files and notes on a local website, and access them within other devices on the same network.\\n\\nRequirements\\n   Node.js\\n   mongoDB\\n\\nUsage\\n   1. Start mongoDB instance on the defualt port 27017\\n   2. Open command line on 'server' folder and type npm start\\n   3. Access the website via http://localhost:3000/\",\r\n        \"createdAt\": \"2020-09-05T15:47:48.939Z\",\r\n        \"updatedAt\": \"2020-09-05T15:47:48.939Z\",\r\n      },\r\n      {\r\n        \"selfDestruct\": 24,\r\n        \"isMainNote\": false,\r\n        \"_id\": \"5f53b33131b5cb81a4dd1d0d\",\r\n        \"title\": \"Note #2\",\r\n        \"content\": \"You can paste here text and open it later on your phone!\",\r\n        \"createdAt\": \"2020-09-05T15:48:01.649Z\",\r\n        \"updatedAt\": \"2020-09-05T15:48:01.649Z\",\r\n      },\r\n      {\r\n        \"selfDestruct\": 24,\r\n        \"isMainNote\": false,\r\n        \"_id\": \"5f53b33131b5cb81a4dd1123\",\r\n        \"title\": \"Note #3\",\r\n        \"content\": \"\",\r\n        \"createdAt\": \"2020-09-05T15:48:01.649Z\",\r\n        \"updatedAt\": \"2020-09-05T15:48:01.649Z\",\r\n      },\r\n      {\r\n        \"selfDestruct\": 24,\r\n        \"isMainNote\": false,\r\n        \"_id\": \"5f53b33131b5cb81a4d4567\",\r\n        \"title\": \"Note #4\",\r\n        \"content\": \"\",\r\n        \"createdAt\": \"2020-09-05T15:48:01.649Z\",\r\n        \"updatedAt\": \"2020-09-05T15:48:01.649Z\",\r\n      }]\r\n    })\r\n    .then(json => dispatch(loadNotes(json)))\r\n    .catch(error =>  {\r\n      error.type = 'connection';\r\n      dispatch(errorNotes(error));\r\n    });\r\n}\r\n\r\n\r\n\r\nexport const loadNotes = notes => ({\r\n    type: ActionTypes.LOAD_NOTES,\r\n    payload: notes\r\n  })\r\n\r\nexport const addNote = (note) => ({\r\n        type: ActionTypes.ADD_NOTE,\r\n        payload: note\r\n    })\r\n\r\nexport const deleteNoteFromStore = (noteID) => ({\r\n    type: ActionTypes.DELETE_NOTE,\r\n    payload: noteID\r\n  })\r\n\r\nexport const deleteNote = (noteID) => (dispatch) => {\r\n    dispatch(loadingNotes(true))\r\n    return sleep(500)\r\n    .then(() => dispatch(deleteNoteFromStore(noteID)))\r\n    .catch(error =>  { \r\n      error.type = 'connection';\r\n      error.message = 'Unable to delete note.\\nError: '+error.message;\r\n      dispatch(errorNotes(error));\r\n    });\r\n}\r\n\r\nexport const postNote = (note) => (dispatch) => {\r\n    dispatch(loadingNotes(true))\r\n    const resource = note._id ? 'api/notes/'+note._id : 'api/notes';\r\n    \r\n    return sleep(500)\r\n    .then(() => {\r\n      return {\r\n        ...note,\r\n        \"_id\": note._id ? note._id : \"abc\"+Math.floor(Math.random() * 10000),\r\n        \"createdAt\":new Date(Date.now()),\r\n        \"updatedAt\":new Date(Date.now()),\r\n      }\r\n    })\r\n    .then(response => note._id ? dispatch(editNote(response)) : dispatch(addNote(response)))\r\n    .catch(error =>  {\r\n      error.type = 'connection';\r\n      error.message = 'Your note could not be posted.\\nError: '+error.message;\r\n      dispatch(errorNotes(error));\r\n    });\r\n};\r\n\r\n\r\n/*\r\nconst shouldFetchPosts = (state, subreddit) => {\r\n  const posts = state.postsBySubreddit[subreddit]\r\n  if (!posts) {\r\n    return true\r\n  }\r\n  if (posts.isFetching) {\r\n    return false\r\n  }\r\n  return posts.didInvalidate\r\n}\r\n\r\nexport const fetchPostsIfNeeded = subreddit => (dispatch, getState) => {\r\n  if (shouldFetchPosts(getState(), subreddit)) {\r\n    return dispatch(fetchPosts(subreddit))\r\n  }\r\n}*/\r\n","// UI Actions:\r\nexport const SET_THEME_LIGHT = \"SET_THEME_LIGHT\";\r\nexport const SET_THEME_DARK = \"SET_THEME_DARK\";\r\n\r\n//Notes ACtions:\r\nexport const ADD_NOTE = \"ADD_NOTE\";\r\nexport const EDIT_NOTE = \"EDIT_NOTE\";\r\nexport const DELETE_NOTE = \"DELETE_NOTE\";\r\nexport const LOAD_NOTES = \"LOAD_NOTES\";\r\nexport const LOADING_STATE_NOTES = \"LOADING_STATE_NOTES\";\r\nexport const ERROR_NOTES = \"ERROR_NOTES\";\r\n\r\n//Files ACtions:\r\nexport const ADD_FILE = \"ADD_FILE\";\r\nexport const DELETE_FILE = \"DELETE_FILE\";\r\nexport const LOAD_FILES = \"LOAD_FILES\";\r\nexport const LOADING_STATE_FILES = \"LOADING_STATE_FILES\";\r\nexport const ERROR_FILES = \"ERROR_FILES\";","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { postNote, deleteNote } from '../redux/ActionCreators/notesActions'\r\nimport ErrorComp from './ErrorComponent'\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst styles = (theme) => ({\r\n    typographyTitle: {\r\n      marginTop:'16px'\r\n    },\r\n    title:{\r\n        marginBottom: '8px',\r\n        marginTop: '-8px'\r\n    },\r\n    underline: {\r\n        \"&&&:before\": {\r\n          borderBottom: \"none\"\r\n        },\r\n        \"&&:after\": {\r\n          borderBottom: \"none\"\r\n        }\r\n      },\r\n    formControl: {\r\n        minWidth: 140,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    saveBottom: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    space: {\r\n        width: '100%',\r\n    },\r\n\r\n  });\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    postNote: (note) => dispatch(postNote(note)),\r\n    deleteNote: (noteID) => dispatch(deleteNote(noteID)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    notes: state.notes\r\n});\r\n\r\n  \r\nfunction DeleteDialog(props){\r\n    return(\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Delete this Note?\"}</DialogTitle>\r\n            {/* <DialogContent></DialogContent> */}\r\n            <DialogActions>\r\n            <Button onClick={props.handleClose} color=\"primary\">\r\n                Cancel\r\n            </Button>\r\n            <Button onClick={props.handleDelete} color=\"primary\" autoFocus>\r\n                Delete\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n      );\r\n}\r\n\r\nclass EditNote extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: null,\r\n            deleteDialogOpen: false,\r\n            selfDestruct: '8',\r\n            title: '',\r\n            content:'',\r\n            touched: false\r\n        }\r\n    }\r\n\r\n    /** Handler for self destruct field in the note */\r\n    onChangeSelfDestruct = event => {\r\n        this.setState({\r\n            selfDestruct: event.target.value,\r\n            touched: true\r\n        });\r\n    };\r\n\r\n    /** Handler for titile of the noe */\r\n    onChangeTitle = event => {\r\n        this.setState({\r\n            title: event.target.value,\r\n            touched: true\r\n        });\r\n    };\r\n\r\n    /** Handler for the content field of the note */\r\n    onChangeContent = event => {\r\n        this.setState({\r\n            content: event.target.value,\r\n            touched: true\r\n        });\r\n    };\r\n\r\n    /** Handler when the users saves a note */\r\n    onClickSave = event => {\r\n        // create the new note object\r\n        const newNote = {\r\n            _id: this.state.id,\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            selfDestruct: this.state.selfDestruct,\r\n        }\r\n\r\n        // dispatch post note to redux and go back to the notes list\r\n        this.props.postNote(newNote);\r\n        //this.props.history.goBack();\r\n    };\r\n\r\n    /** Handler when the user click the trash\\delete */\r\n    onClickTrash = event => {\r\n        this.setState({ deleteDialogOpen:true });\r\n    };\r\n    \r\n    handleCloseDeleteDialog = () => {\r\n        this.setState({deleteDialogOpen:false});\r\n    };\r\n\r\n    handleDelete = () => {\r\n        if(this.props.match.params.noteId)\r\n            this.props.deleteNote(this.props.match.params.noteId)\r\n        this.props.history.goBack();\r\n        this.setState({deleteDialogOpen:false});\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        // if the notes list is still loading, dont change the state\r\n        if(nextProps.notes.isLoading)\r\n            return null;\r\n\r\n        // get note id from url\r\n        const paramId = nextProps.match.params.noteId;\r\n\r\n        // if the url havnt changed\r\n        if( paramId === prevState.id){\r\n            // dont change the state\r\n            return null\r\n        }\r\n        \r\n        // if no id in the url, create empty note\r\n        if(!paramId){\r\n            return prevState.touched ? null : \r\n            {\r\n                id: null,\r\n                selfDestruct: '8',\r\n                title: '',\r\n                content:'',\r\n                touched: false\r\n            };\r\n        }\r\n\r\n        // find the note to edit from the url param\r\n        var note = nextProps.notes.items.filter(n => n._id===paramId)[0];\r\n        if( !note ){     // if no note found\r\n            return {noteNotFound: true};\r\n        }\r\n        else{\r\n            // load the note to state\r\n            return {\r\n                id:             note._id,\r\n                selfDestruct:   note.selfDestruct,\r\n                title:          note.title,\r\n                content:        note.content,\r\n                touched:        false\r\n            };\r\n        } \r\n\t\t\r\n\t}\r\n    \r\n    render() {\r\n\r\n        if(this.state.noteNotFound){\r\n            const paramId = this.props.match.params.noteId;\r\n            const error = new Error('Could not find note with id ' + paramId);\r\n            return(\r\n                <div>\r\n                    <br /><br />\r\n                    <ErrorComp error={error}/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const { classes } = this.props;\r\n\r\n        return(\r\n            <Container maxWidth=\"sm\">\r\n                <Typography variant=\"h4\" gutterBottom className={classes.typographyTitle}>\r\n                    {this.props.match.path === \"/newNote\" ? 'New Note' : 'Edit'}\r\n                </Typography>\r\n                <Card variant=\"outlined\">\r\n                    <CardContent>\r\n                        <TextField fullWidth id=\"title\" label=\"Title\" className={classes.title} \r\n                            onChange={this.onChangeTitle} value={this.state.title} />\r\n                        <TextField  fullWidth\r\n                            id=\"content\"\r\n                            label=\"Note\"\r\n                            placeholder=\"Type something...\"\r\n                            multiline\r\n                            rows=\"15\"\r\n                            InputProps={{ className: classes.underline }} \r\n                            onChange={this.onChangeContent} value={this.state.content}\r\n                        />\r\n                        \r\n                    </CardContent>\r\n                    <CardActions>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.saveBottom}\r\n                        onClick={this.onClickSave}>Save</Button>\r\n                    <div className={classes.space}/>\r\n                    <FormControl margin='dense' variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel id=\"destruct-label\">Self Destruct</InputLabel>\r\n                        <Select\r\n                            labelId=\"destruct-label\"\r\n                            id=\"destructt\"\r\n                            value={this.state.selfDestruct}\r\n                            onChange={this.onChangeSelfDestruct}\r\n                            label=\"Self Destruct\"\r\n                        >\r\n                            <MenuItem value='-1'>Never</MenuItem>\r\n                            <MenuItem value='1'>1 Hour</MenuItem>\r\n                            <MenuItem value='8'>8 Hours</MenuItem>\r\n                            <MenuItem value='24'>24 Hours</MenuItem>\r\n                            <MenuItem value='72'>3 Days</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                        \r\n                        <IconButton aria-label=\"Delete\" className={classes.iconToRight}\r\n                            onClick={this.onClickTrash}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </CardActions>\r\n                </Card>\r\n                <DeleteDialog\r\n                   open={this.state.deleteDialogOpen}\r\n                   handleClose={this.handleCloseDeleteDialog}\r\n                   handleDelete={this.handleDelete} />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n// use redux actions and store\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withStyles(styles)(withRouter(EditNote)));","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { baseUrl } from '../baseUrl';\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    deleteIcon: {\r\n        marginLeft: 'auto',\r\n      },\r\n      lockIcon: {\r\n        color: theme.palette.success.main\r\n      },\r\n      cardContent: {\r\n        paddingBottom: 0\r\n      },\r\n      cardMedia: {\r\n        marginBottom: theme.spacing(1),\r\n        objectFit: \"contain\"\r\n      },\r\n      typography: {\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n      },\r\n      destructText: {\r\n        color: theme.palette.error.light,\r\n      }\r\n}));\r\n\r\n// files extensions that are supported \r\nconst FILE_KNOWN_EXT = ['ACC', 'AE', 'AI', 'AN', 'AVI', 'BMP', 'CSV', 'DAT', 'DGN', 'DOC', 'DOCH', 'DOCM', 'DOCX', 'DOTH', 'DW', 'DWFX', 'DWG', 'DXF', 'DXL', 'EML', 'EPS', 'F4A', 'F4V', 'FILE', 'FLV', 'FS', 'GIF', 'HTML', 'IND', 'JPEG', 'JPG', 'JPP', 'Log', 'LR', 'M4V', 'MBOX', 'MDB', 'MIDI', 'MKV', 'MOV', 'MP3', 'MP4', 'MPEG', 'MPG', 'MPP', 'MPT', 'MPW', 'MPX', 'MSG', 'ODS', 'OGA', 'OGG', 'OGV', 'ONE', 'OST', 'PDF', 'PHP', 'PNG', 'POT', 'POTH', 'POTM', 'POTX', 'PPS', 'PPSX', 'PPT', 'PPTH', 'PPTM', 'PPTX', 'PREM', 'PS', 'PSD', 'PST', 'PUB', 'PUBH', 'PUBM', 'PWZ', 'RAR', 'READ', 'RP', 'RTF', 'SQL', 'SVG', 'SWF', 'TIF', 'TIFF', 'TXT', 'URL', 'VCF', 'VDX', 'VOB', 'VSD', 'VSS', 'VST', 'VSX', 'VTX', 'WAV', 'WDP', 'WEBM', 'WMA', 'WMV', 'XD', 'XLS', 'XLSM', 'XLSX', 'XML', 'ZIP'];\r\n\r\n/**\r\n * Gets a file name and returns a path for an image\r\n * thumbnail of the file based on its extension name.\r\n * If the extension is not suppurted, returns default thumbnail: '/FILE.png'\r\n */\r\nfunction filenameToExtImg(filename) {\r\n    const ext = filename.split('.').pop().toUpperCase();\r\n    if (FILE_KNOWN_EXT.find(e => e === ext))\r\n        return '/local-box/img/file-extensions/' + ext + '.png';\r\n    else\r\n        return '/local-box/img/file-extensions/FILE.png'\r\n}\r\n\r\n/**\r\n * Calculate how much time left from now until destroyAt date\r\n * returns human readable string\r\n */\r\nfunction timeToLive(destroyAt){\r\n    // time untill destruct in miniutes;\r\n    var diff = (Date.parse(destroyAt) - Date.now()) / 60000\r\n\r\n    var hours = diff/60, mins = Math.round(diff%60);\r\n\r\n    if(hours <= 1){\r\n      return mins + 'min';\r\n    }\r\n    else if(hours >= 11.5 || mins === 0 ){ // the time is more then 11 hours\r\n      return Math.round(hours) + ' hours';\r\n    }\r\n    else{\r\n      return Math.floor(hours) + 'h ' + mins + 'min'\r\n    }\r\n}\r\n\r\n/**\r\n * Converts file size in bytes to pretty string\r\n * @param {Number} bytes     The file size (in bytes)\r\n * @param {Number} decimals  Decimal places to be included in the string (defaul is 2) \r\n */\r\nfunction fileSizeToString(bytes, decimals = 2) {\r\n    if (bytes === 0) return '0 Bytes';\r\n\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n}\r\n\r\n /**\r\n   * Component that renders the files grid\r\n   */\r\nfunction FilesGrid(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tif(props.isLoading){\r\n        return <LinearProgress />\r\n    }\r\n\r\n    const dateFormater = new Intl.DateTimeFormat('default', {\r\n      year: 'numeric', month: 'numeric', day: 'numeric',\r\n      hour: 'numeric', minute: 'numeric',\r\n      hour12: false,\r\n    });\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={3}>\r\n        {props.items.map(file => {\r\n          return (\r\n            <Grid item xs={6} sm={4} key={file._id}>\r\n              <Card>\r\n                <Tooltip title={file.originalname} arrow>\r\n                  <CardActionArea >\r\n                    <CardContent className={classes.cardContent}>\r\n                      <CardMedia component=\"img\" alt=\"File\"\r\n                        title=\"File\" height=\"55\"\r\n                        image={filenameToExtImg(file.originalname)}\r\n                        className={classes.cardMedia}\r\n                      />\r\n                      <Typography className={classes.typography} gutterBottom variant=\"subtitle1\" >\r\n                        {file.originalname}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {dateFormater.format(new Date(Date.parse(file.updatedAt)))}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Tooltip>\r\n                <Divider />\r\n\r\n                <CardActions disableSpacing>\r\n                  {file.encrypted\r\n                    ? <IconButton size=\"small\" className={classes.lockIcon}\r\n                      onClick={props.openDownloadDialog(file.originalname, file._id)}>\r\n                      <LockIcon />\r\n                    </IconButton>\r\n                    : <IconButton component='a' size=\"small\" href={baseUrl + file.path}>\r\n                      <GetAppIcon />\r\n                    </IconButton>}\r\n\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {fileSizeToString(file.size)}\r\n                  </Typography>\r\n\r\n                  <IconButton size=\"small\" className={classes.deleteIcon}\r\n                    onClick={props.openDeleteDialog(file.originalname, file._id)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </CardActions>\r\n\r\n              </Card>\r\n              \r\n              <Typography variant=\"caption\" className={classes.destructText} >\r\n                {file.destroyAt ? 'Delete in '+timeToLive(file.destroyAt) :''}\r\n              </Typography>\r\n            \r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n\t);\r\n}\r\n\r\nexport default FilesGrid;","export const baseUrl = '';","import React, {Component} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    input: {\r\n        //display: 'none',\r\n    },\r\n    selfDestruct: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    TopDialogContent:{\r\n        \"&&:first-child\":{\r\n            paddingTop: theme.spacing(1),\r\n            paddingBottom:  theme.spacing(2)\r\n        }   \r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n      },\r\n});\r\n\r\n\r\n\r\nclass UploadDialog extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            formValues: {\r\n                files: [],\r\n                encryptChecked: false,\r\n                password: '',\r\n                selfDestruct: '8'\r\n            },\r\n            formErrors: {\r\n                files: \"\",\r\n                password: \"\",\r\n            },\r\n            formValidity: {\r\n                files: false,\r\n                password: true,\r\n            }\r\n        };\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log(target)\r\n        const { formValues } = this.state;\r\n        if(target.name === 'encryptChecked')\r\n            formValues[target.name] = target.checked;\r\n        else if(target.name === 'files')\r\n            formValues[target.name] = target.files;\r\n        else\r\n            formValues[target.name] = target.value;\r\n        console.log(formValues[target.name])\r\n        this.setState({ formValues });\r\n        this.handleValidation(target);\r\n\r\n        //this.setState({ encryptChecked: event.target.checked });\r\n    };\r\n\r\n    handleValidation = target => {\r\n        const { name, value } = target;\r\n        const { formErrors,  formValidity, formValues} = this.state;  \r\n        if(name === 'files'){\r\n            formValidity[name] = formValues[name] !== 0 \r\n            formErrors[name] = formValidity[name] ? \"\" : 'Choose at least one file';\r\n        }\r\n        else if(name === 'password' || name === 'encryptChecked'){\r\n            formValidity['password'] = (value.length >= 4) || !formValues.encryptChecked         \r\n            formErrors['password'] = formValidity['password'] ? \"\" : 'Password should be at least 4 characters';\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            formValues: {\r\n                files: [],\r\n                encryptChecked: false,\r\n                password: '',\r\n                selfDestruct: '8'\r\n            },\r\n            formErrors: {\r\n                files: \"\",\r\n                password: \"\",\r\n            },\r\n            formValidity: {\r\n                files: false,\r\n                password: true,\r\n            }\r\n        });\r\n        this.props.handleClose();\r\n    }\r\n\r\n    // when upload button clicked, dispath POST files to redux\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const { formValues, formValidity } = this.state;\r\n        if (Object.values(formValidity).every(Boolean)) {\r\n          this.props.postFiles(formValues)\r\n          this.props.handleClose();\r\n        }\r\n      };\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        const { formValues, formErrors,formValidity, isSubmitting } = this.state;\r\n        return (\r\n            <Dialog open={this.props.open} onClose={this.handleClose} >\r\n                <DialogTitle id=\"upload-dialog-title\">\r\n                    Upload Files\r\n                    <IconButton className={classes.closeButton}\r\n                        onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>   \r\n                </DialogTitle>\r\n                <form onSubmit={this.props.handleSubmit}>\r\n                <DialogContent className={classes.TopDialogContent}>\r\n                    <input\r\n                        id=\"upload-files-button\"\r\n                        name=\"files\"\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={this.handleChange}\r\n                        hidden\r\n                        className={classes.input}/>\r\n                    <label htmlFor=\"upload-files-button\" >\r\n                        <Button fullWidth variant=\"outlined\" color=\"primary\" size=\"large\" component=\"span\"\r\n                            className={classes.uploadFilesButton}>\r\n                            {\r\n                                formValues.files.length === 1 ? formValues.files[0].name\r\n                                : formValues.files.length > 1 ? formValues.files.length+' Files Selected'\r\n                                : 'Select Files'\r\n                            }\r\n                        </Button>\r\n                    </label>\r\n                    \r\n                </DialogContent>\r\n                <Divider />\r\n                <DialogContent>   \r\n                    <FormControlLabel \r\n                        label=\"Encrypt\" \r\n                        \r\n                        control={\r\n                            <Checkbox name=\"encryptChecked\"\r\n                                checked={formValues.encryptChecked}\r\n                                onChange={this.handleChange}\r\n                                color=\"primary\" />\r\n                            }\r\n                        />\r\n                    \r\n                    <TextField  margin='dense' fullWidth variant=\"filled\"\r\n                        disabled={!formValues.encryptChecked}\r\n                        value={formValues.password}\r\n                        onChange={this.handleChange}\r\n                        error={!formValidity.password}\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        helperText={ !formValidity.password ? formErrors.password :\r\n                            \"If you lose the password, you won't be able to accsess the file\"}          \r\n                    />\r\n                    <FormControl   margin='dense' variant=\"filled\" fullWidth className={classes.selfDestruct}>\r\n                        <InputLabel id=\"destruct-label-2\">Self Destruct</InputLabel>\r\n                        <Select\r\n                            labelId=\"destruct-label-2\"\r\n                            id=\"selfDestruct\"\r\n                            name=\"selfDestruct\"\r\n                            value={formValues.selfDestruct}\r\n                            onChange={this.handleChange}\r\n                            label=\"Self Destruct\" >\r\n                            <MenuItem value='-1'>Never</MenuItem>\r\n                            <MenuItem value='1'>1 Hour</MenuItem>\r\n                            <MenuItem value='8'>8 Hours</MenuItem>\r\n                            <MenuItem value='24'>24 Hours</MenuItem>\r\n                            <MenuItem value='72'>3 Days</MenuItem>\r\n                        </Select>\r\n                    </FormControl>    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"submit\" onClick={this.handleSubmit} color=\"primary\">\r\n                        Upload\r\n                    </Button>\r\n                </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UploadDialog)","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//import { makeStyles } from '@material-ui/core/styles';\r\n/*const useStyles = makeStyles(theme => ({\r\n\r\n}));*/\r\n\r\nfunction DeleteDialog(props) {\r\n\t//const classes = useStyles();\r\n\r\n\t/**\r\n\t * Handler fot DELETE button on the DeleteDialog\r\n\t */\r\n\tconst handleDelete = () => {\r\n\t\t// When the user agree to delete a file,\r\n\t\t// an action deleteFile is dispatched and the dialog closes\r\n\t\tprops.handleDelete(props.fileId)\r\n\t\tprops.handleClose();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen={props.open}\r\n\t\t\tonClose={props.handleClose}\r\n\t\t\taria-labelledby=\"alert-dialog-title\"\r\n\t\t\taria-describedby=\"alert-dialog-description\">\r\n\t\t\t<DialogTitle id=\"dialog-title\">\r\n\t\t\t\t{\"Delete this file?\"}\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<DialogContentText id=\"dialog-description\">\r\n\t\t\t\t\t\tAre you sure you want to delete the file \"{props.filename}\"?\r\n\t\t\t\t</DialogContentText>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button onClick={props.handleClose} color=\"primary\">\r\n\t\t\t\t\tCancel\r\n        \t\t</Button>\r\n\t\t\t\t<Button onClick={handleDelete} color=\"primary\" autoFocus>\r\n\t\t\t\t\tDelete\r\n       \t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n\r\nexport default DeleteDialog;","import React from 'react';\r\nimport { baseUrl } from '../../baseUrl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//import { makeStyles } from '@material-ui/core/styles';\r\n/*const useStyles = makeStyles(theme => ({\r\n\r\n}));*/\r\n/*\r\n\r\n*/\r\n/**\r\n   * Component that renders a dialog \r\n   */\r\n\r\nfunction DownloadDialog(props) {\r\n    //const classes = useStyles();\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.handleClose}>\r\n            <DialogTitle id=\"download-dialog-title\">\r\n                Download Encrypted File\r\n            </DialogTitle>\r\n            <form method=\"post\"\r\n                action={baseUrl + 'api/files/decrypt/' + props.filename}>\r\n                <DialogContent>\r\n                    <input hidden\r\n                        type='text'\r\n                        name='id'\r\n                        value={props.fileId}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                    />\r\n                    <DialogContentText>\r\n                        If you enter the wrong password, the downloaded file will be corrupted.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={props.handleClose}\r\n                        color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        onClick={props.handleClose}\r\n                        color=\"primary\">\r\n                        Download\r\n                    </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default DownloadDialog;","import * as ActionTypes from '../actionTypes';\r\nimport { baseUrl } from '../../baseUrl';\r\n\r\n// Action Creators:\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport const loadingFiles = loadingState => ({\r\n  type: ActionTypes.LOADING_STATE_FILES,\r\n  payload: loadingState\r\n})\r\n\r\nexport const errorFiles = error => ({\r\n  type: ActionTypes.ERROR_FILES,\r\n  payload: error\r\n})\r\n\r\nexport const fetchFiles = () => dispatch => {\r\n    dispatch(loadingFiles(true))\r\n\r\n  return sleep(1000)\r\n  .then(() => {\r\n    return [{\"encrypted\":false,\r\n      \"_id\":\"101\",\r\n      \"originalname\":\"README.md\",\r\n      \"path\":\"uploads\\\\README.md\",\r\n      \"size\":1,\r\n      \"mimetype\":\"text/plain\",\r\n      \"createdAt\":\"2020-09-05T11:32:49.832Z\",\r\n      \"updatedAt\":\"2020-09-05T11:32:49.832Z\",\r\n    },\r\n    {\"encrypted\":true,\r\n      \"_id\":\"102\",\r\n      \"originalname\":\"encrypted.txt\",\r\n      \"path\":\"uploads\\\\encrypted.txt\",\r\n      \"size\":0,\r\n      \"mimetype\":\"text/plain\",\r\n      \"destroyAt\":new Date(Date.now() + (8*60*60*1000)),\r\n      \"createdAt\":\"2020-09-05T11:32:49.832Z\",\r\n      \"updatedAt\":\"2020-09-05T11:32:49.832Z\",\r\n    },\r\n    {\"encrypted\":false,\r\n      \"_id\":\"103\",\r\n      \"originalname\":\"logo.jpg\",\r\n      \"path\":\"uploads\\\\logo.jpg\",\r\n      \"size\":416506,\r\n      \"mimetype\": \"image/jpeg\",\r\n      \"createdAt\":\"2020-09-05T11:32:49.832Z\",\r\n      \"updatedAt\":\"2020-09-05T11:32:49.832Z\",\r\n    }]\r\n  })\r\n  .then(json => dispatch(loadFiles(json)))\r\n  .catch(error =>  { \r\n    error.type = 'connection';\r\n    dispatch(errorFiles(error));\r\n  });\r\n        \r\n}\r\n\r\nexport const loadFiles = files => ({\r\n    type: ActionTypes.LOAD_FILES,\r\n    payload: files\r\n  })\r\n\r\nexport const addFile = (file) => ({\r\n        type: ActionTypes.ADD_FILE,\r\n        payload: file\r\n    })\r\n\r\nexport const deleteFileFromStore = (fileID) => ({\r\n    type: ActionTypes.DELETE_FILE,\r\n    payload: fileID\r\n  })\r\n\r\nexport const deleteFile = (fileID) => (dispatch) => {\r\n    dispatch(loadingFiles(true))\r\n    return sleep(500)\r\n    .then(() => dispatch(deleteFileFromStore(fileID)))\r\n    .catch(error =>  { \r\n      error.type = 'connection';\r\n      error.message = 'Unable to delete file\\nError: '+error.message;\r\n      dispatch(errorFiles(error));\r\n    });\r\n}\r\n\r\nexport const postFiles = (uploadForm) => (dispatch) => {\r\n  dispatch(loadingFiles(true))\r\n  const data = new FormData();\r\n  for (const file of  uploadForm.files) {\r\n    data.append('files', file);\r\n  }\r\n  data.append('encrypt', uploadForm.encryptChecked);\r\n  data.append('password', uploadForm.password);\r\n  data.append('selfDestruct', uploadForm.selfDestruct);\r\n  \r\n  sleep(1000)\r\n  .then(() => {\r\n    return [{\"encrypted\":uploadForm.encryptChecked,\r\n      \"_id\": \"abc\"+Math.floor(Math.random() * 10000),\r\n      \"originalname\":uploadForm.files[0].name,\r\n      \"path\":\"uploads\\\\\"+uploadForm.files[0].name,\r\n      \"size\":uploadForm.files[0].size,\r\n      \"mimetype\":uploadForm.files[0].type,\r\n      \"destroyAt\":new Date(Date.now() + (uploadForm.selfDestruct*60*60*1000)),\r\n      \"createdAt\":new Date(Date.now()),\r\n      \"updatedAt\":new Date(Date.now()),\r\n    }]\r\n  })\r\n  .then(response => dispatch(addFile(response)))\r\n  .catch(error =>  { \r\n      error.type = 'connection';\r\n      error.message = 'Your file could not be posted\\nError: '+error.message;\r\n      dispatch(errorFiles(error));\r\n  });\r\n   \r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport FilesGrid from './FilesGridComponent';\r\nimport ErrorComp from './ErrorComponent';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport UploadDialog from './Dialogs/UploadDialog';\r\nimport DeleteDialog from './Dialogs/DeleteDialog';\r\nimport DownloadDialog from './Dialogs/DownloadDialog';\r\nimport { connect } from \"react-redux\";\r\nimport { postFiles, deleteFile, fetchFiles } from '../redux/ActionCreators/filesActions'\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nconst styles = (theme) => ({\r\n  typographyTitle: {\r\n    textAlign: 'left',\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  root: {\r\n    paddingBottom: 56 + theme.spacing(2),\r\n  },\r\n  uploadFilesButton: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchFiles: () => dispatch(fetchFiles()),\r\n  postFiles: (uploadFormValues) => dispatch(postFiles(uploadFormValues)),\r\n  deleteFile: (fileID) => dispatch(deleteFile(fileID)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  files: state.files\r\n});\r\n\r\n\r\n/**\r\n * Class component for the 'Files' page,\r\n * where the user can upload, download and\r\n * delete files from the server\r\n */\r\nclass Files extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      downloadDialog: {\r\n        open: false,\r\n        handleClose: this.closeDialog('downloadDialog'),\r\n        fileId:   '',\r\n        filename: '',\r\n      },\r\n\r\n      deleteDialog: {\r\n        open: false,\r\n        handleClose: this.closeDialog('deleteDialog'),\r\n        handleDelete: this.props.deleteFile,\r\n        fileId:   '',\r\n        filename: '',\r\n      },\r\n\r\n      uploadDialog: {\r\n        open: null,\r\n        handleClose: this.closeDialog('uploadDialog'),\r\n        postFiles: this.props.postFiles\r\n      },\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // fetch files record from the server\r\n    this.props.fetchFiles()\r\n\r\n    // if url is /file/upload open the upload dialog\r\n    if(this.props.upload){\r\n      this.openUploadDialog();\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * A function that gets a dialog name and returns\r\n   * a funciton that closes that dialog\r\n   */\r\n  closeDialog = (dialogName) => () => {\r\n    this.setState(state => {\r\n      return {\r\n        [dialogName]: {\r\n          ...state[dialogName],\r\n          open: false,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handler to open UploadDialog component\r\n   * (When UPLOAD FILES is clicked)\r\n   */\r\n  openUploadDialog = () => {\r\n    this.setState(state => {\r\n      return {\r\n        uploadDialog: {\r\n          ...state.uploadDialog,\r\n          open: true,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handler to open DeleteDialog component\r\n   * (When the trash can icon is clicked)\r\n   */\r\n  openDeleteDialog = (filename, fileId) => () => {\r\n    this.setState(state => {\r\n      return {\r\n        deleteDialog: {\r\n          ...state.deleteDialog,\r\n          open:     true,\r\n          fileId:   fileId,\r\n          filename: filename,\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handler to open DownloadDialog component\r\n   * (When the lock icon of an encrypted file is clicked)\r\n   */\r\n  openDownloadDialog = (filename, fileId) => () =>{\r\n    this.setState(state => {\r\n      return {\r\n        downloadDialog: {\r\n          ...state.downloadDialog,\r\n          open:     true,\r\n          fileId:   fileId,\r\n          filename: filename,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    \r\n    if( this.props.files.error !== null ){\r\n      return(\r\n        <div className={classes.root}>\r\n          <Typography variant=\"h4\" gutterBottom className={classes.typographyTitle}>Files</Typography>\r\n          <ErrorComp error={this.props.files.error}/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container className={classes.root} maxWidth='sm'>\r\n        <Typography variant=\"h4\" gutterBottom className={classes.typographyTitle}>Files</Typography>\r\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={this.openUploadDialog}\r\n          startIcon={<CloudUploadIcon />} className={classes.uploadFilesButton}>\r\n          Upload Files\r\n        </Button>\r\n        <FilesGrid\r\n          isLoading={this.props.files.isLoading}\r\n          items={this.props.files.items}\r\n          openDeleteDialog={this.openDeleteDialog}\r\n          openDownloadDialog={this.openDownloadDialog}\r\n          />\r\n        <DownloadDialog {...this.state.downloadDialog}/>\r\n        <DeleteDialog   {...this.state.deleteDialog}  />\r\n        <UploadDialog   {...this.state.uploadDialog}  />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// use rredux actions and store\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Files));","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PermMediaIcon from '@material-ui/icons/PermMedia';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport logo from '../img/logo.jpg'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n\r\n  //drawer\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7),\r\n  },\r\n  //close drawer buttn\r\n  toggleButton:{\r\n    position: 'absolute',\r\n    top:0,\r\n    right: 0,\r\n  },\r\n\r\n}));\r\n\r\nexport default function SideDrawer(props) {\r\n  const classes = useStyles(props);\r\n  const theme = useTheme();\r\n\r\n  const [openFiles, setOpenFiles] = React.useState(false);\r\n  const [openDrawer, setOpenDrawer] = React.useState(true);\r\n\r\n  const handleAddFile = () => {\r\n    setOpenFiles(!openFiles);\r\n  };\r\n\r\n  const handleDrawerToggle = () => {\r\n    setOpenDrawer(!openDrawer);\r\n  };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <Drawer\r\n        onClose={handleDrawerToggle}\r\n        variant='permanent'\r\n        className={clsx(`${classes.drawer}`, {\r\n          [`${classes.drawerOpen}`]: openDrawer,\r\n          [classes.drawerClose]: !openDrawer,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [`${classes.drawerOpen}`]: openDrawer,\r\n            [classes.drawerClose]: !openDrawer,\r\n          }),\r\n        }}\r\n      >\r\n\r\n        <img src={logo} alt='Logo' width='100%' />\r\n        <IconButton onClick={handleDrawerToggle} className={classes.toggleButton}>\r\n          {openDrawer ? <ChevronLeftIcon /> : <ChevronRightIcon /> }\r\n        </IconButton>\r\n\r\n        <Divider />\r\n        <List>\r\n            <ListItem button key='add' component={RouterLink} to='/newNote' >\r\n              <ListItemIcon><AddIcon /></ListItemIcon>\r\n              <ListItemText primary='Add Note' />\r\n            </ListItem>\r\n\r\n            <ListItem button key='home' component={RouterLink} to='/'>\r\n              <ListItemIcon><HomeIcon /></ListItemIcon>\r\n              <ListItemText primary='Home' />\r\n            </ListItem>\r\n  \r\n\r\n            <ListItem button key='notes' component={RouterLink} to='/notes' >\r\n              <ListItemIcon><NotesIcon /></ListItemIcon>\r\n              <ListItemText primary='Notes' />\r\n            </ListItem>\r\n\r\n            <ListItem button key='files' component={RouterLink} to='/files' >\r\n              <ListItemIcon><PermMediaIcon /></ListItemIcon>\r\n              <ListItemText primary='Files' />\r\n              <IconButton component={RouterLink}  to='/files/upload' >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n            <ListItem button key='setting'>\r\n              <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n              <ListItemText primary='Setting' />\r\n            </ListItem>\r\n        </List>\r\n      </Drawer>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React,{Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ErrorBoundary from './ErrorBoundary'\r\nimport BottomNav from './BottomNavComponent'\r\nimport Home from './HomeComponent'\r\nimport Notes from './NotesComponent'\r\nimport EditNote from './EditNoteComponent'\r\nimport Files from './FilesComponent'\r\nimport SideDrawer from './DrawerComponent'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {postNote, fetchNotes} from '../redux/ActionCreators/notesActions'\r\nimport {setThemeDark, setThemeLight} from '../redux/ActionCreators/uiActions'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst styles =  (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        //padding: theme.spacing(3),\r\n      },\r\n     \r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchNotes: () => dispatch(fetchNotes()),\r\n    postNote: (note) => dispatch(postNote(note)),\r\n    setThemeDark: () => dispatch(setThemeDark()),\r\n    setThemeLight: () => dispatch(setThemeLight()),\r\n});\r\n\r\nconst darkTheme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: { main: '#00838F' },\r\n        secondary: { main: '#445963' }\r\n    },\r\n  });\r\nconst lightTheme = createMuiTheme({\r\n    palette: {\r\n        type: \"light\",\r\n        primary: { main: '#00838F' },\r\n        secondary: { main: '#445963' }\r\n    },\r\n});\r\n\r\nclass Main extends Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n        drawerOpen: this.props.width === 'xs' ? false : true,\r\n      }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('fetchNotes() in componentDidMount of Main')\r\n    this.props.fetchNotes()\r\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n        this.props.setThemeDark()\r\n    }\r\n  }\r\n\r\n\r\n  handleThemeToggle = () => {\r\n     // alert('theme = ~' + this.props.ui.theme+'~')\r\n    if(this.props.ui.theme === 'light')\r\n        this.props.setThemeDark()\r\n    else\r\n        this.props.setThemeLight()\r\n  }\r\n\r\n  HomeWithProps = () => {\r\n      return(\r\n        <Home handleThemeToggle={this.handleThemeToggle}\r\n            notes={this.props.notes}\r\n            postNote={this.props.postNote}/>\r\n      );\r\n  }\r\n\r\n  NotesPage = (props) => {\r\n      if(this.props.width === 'xs'){\r\n          return props.path === 'notes' ? <Notes notes={this.props.notes}/> : <EditNote/> \r\n      }\r\n      else{\r\n          return(\r\n            <Grid container>\r\n                <Grid item xs={4}>\r\n                    <Notes notes={this.props.notes}/>\r\n                </Grid>\r\n                <Divider orientation=\"vertical\" flexItem />\r\n                <Grid item xs={7}>          \r\n                    { props.path === 'notes' ? null : <EditNote/> }\r\n                </Grid>\r\n            </Grid>\r\n          );\r\n      }\r\n  }\r\n\r\n  \r\n  render(){\r\n    var theme = this.props.ui.theme === 'dark' ? darkTheme : lightTheme;\r\n    const { classes } = this.props;\r\n    // ISSUE: does not re render when theme changes\r\n    return(\r\n        <ThemeProvider theme={theme}>\r\n            <Router basename=\"/local-box\">\r\n                <CssBaseline />\r\n                <div className={classes.root}>\r\n                    {this.props.width === 'xs' ? <BottomNav /> : <SideDrawer /> }\r\n                    <div className={classes.content}>\r\n                    <ErrorBoundary>\r\n                    <Switch>\r\n                        <Route path=\"/home\">\r\n                            <this.HomeWithProps/>\r\n                        </Route>\r\n\r\n                        <Route path='/notes/:noteId'>\r\n                            <this.NotesPage path={'editNote'} />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/notes\">\r\n                            <this.NotesPage path={'notes'} />\r\n                        </Route>\r\n                        \r\n                        <Route path=\"/newNote\">\r\n                            <this.NotesPage path={'newNote'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/files/upload\">\r\n                            <Files upload={true}/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/files\">\r\n                            <Files />\r\n                        </Route>  \r\n\r\n                        <Route path=\"/\">\r\n                            <this.HomeWithProps/>\r\n                        </Route>\r\n                    </Switch>\r\n                    </ErrorBoundary>\r\n                    </div>\r\n                </div>\r\n            </Router>     \r\n        </ThemeProvider>\r\n    );\r\n\r\n\r\n  }\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withWidth()(withStyles(styles)(Main)));\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\n// Action Creators:\r\n\r\nexport const setThemeLight = () => ({\r\n    type: ActionTypes.SET_THEME_LIGHT,\r\n})\r\n\r\nexport const setThemeDark = () => ({\r\n    type: ActionTypes.SET_THEME_DARK,\r\n})\r\n","import { combineReducers } from \"redux\";\r\nimport * as ActionTypes from '../actionTypes';\r\nimport notes from \"./notes\";\r\nimport files from \"./files.js\";\r\n\r\n\r\nfunction ui(state = {theme:'light'}, action) {\r\n    switch (action.type) {\r\n\r\n      case ActionTypes.SET_THEME_DARK: {\r\n        return {...state, theme: 'dark'};\r\n      }\r\n      case ActionTypes.SET_THEME_LIGHT: {\r\n        return {...state, theme: 'light'};\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\nexport default combineReducers({ notes, files, ui });\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport default function(state = {items:[],isLoading: true, error:null}, action) {\r\n    switch (action.type) {\r\n\r\n      case ActionTypes.ERROR_NOTES: {\r\n        return {\r\n            ...state,\r\n            error: action.payload,\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.ADD_NOTE: {\r\n        return {\r\n            ...state,\r\n            items: state.items.concat(action.payload),\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.EDIT_NOTE: {\r\n        return {\r\n            ...state,\r\n            items: state.items.map(note => note._id===action.payload._id ? action.payload : note ),\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.DELETE_NOTE: {\r\n        return {\r\n            ...state,\r\n            items: state.items.filter(note => note._id !== action.payload),\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.LOADING_STATE_NOTES: {\r\n        return {\r\n            ...state,\r\n            isLoading: action.payload\r\n        };\r\n      }\r\n\r\n      case ActionTypes.LOAD_NOTES: {\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }","import * as ActionTypes from '../actionTypes';\r\n\r\nexport default function(state = {items:[],isLoading: true, error:null}, action) {\r\n    switch (action.type) {\r\n\r\n      case ActionTypes.ERROR_FILES: {\r\n        return {\r\n            ...state,\r\n            error: action.payload,\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.ADD_FILE: {\r\n        return {\r\n            ...state,\r\n            items: state.items.concat(action.payload),\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.DELETE_FILE: {\r\n        return {\r\n            ...state,\r\n            items: state.items.filter(file => file._id!==action.payload),\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.LOADING_STATE_FILES: {\r\n        return {\r\n            ...state,\r\n            isLoading: action.payload\r\n        };\r\n      }\r\n\r\n      case ActionTypes.LOAD_FILES: {\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { createStore, applyMiddleware  } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nexport default createStore(rootReducer,\r\n    applyMiddleware(thunk, logger));\r\n","import React from 'react';\nimport './App.css';\nimport Main from './components/MainComponent'\nimport 'typeface-roboto';\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store.js'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Main />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}