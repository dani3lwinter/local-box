{"version":3,"sources":["img/logo.jpg","components/ErrorComponent.js","components/ErrorBoundary.js","components/BottomNavComponent.js","components/HomeComponent.js","components/NotesComponent.js","baseUrl.js","redux/ActionCreators/notesActions.js","redux/actionTypes.js","components/EditNoteComponent.js","components/FilesGridComponent.js","components/Dialogs/UploadDialog.js","components/Dialogs/DeleteDialog.js","components/Dialogs/DownloadDialog.js","redux/ActionCreators/filesActions.js","components/FilesComponent.js","components/DrawerComponent.js","components/MainComponent.js","redux/ActionCreators/uiActions.js","redux/reducers/index.js","redux/reducers/notes.js","redux/reducers/files.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","img","maxWidth","width","errorText","textAlign","padding","freepik","color","textDecoration","ErrorComp","props","classes","errorTitle","error","type","errorImg","Typography","variant","className","typographyTitle","src","alt","Link","href","message","split","map","i","key","ErrorBoundary","state","hasError","errorStack","errorInfo","this","setState","componentStack","children","React","Component","pathMap","BottomNav","pathIndex","Box","boxShadow","stickToBottom","BottomNavigation","showLabels","value","onChange","event","newValue","BottomNavigationAction","label","icon","component","RouterLink","to","nextProps","prevState","pathname","location","withRouter","withStyles","position","bottom","Home","onClickSave","mainNote","notes","items","filter","n","isMainNote","postNote","content","selfDestruct","onClickClear","onChangeContent","target","HomeNote","Card","card","CardContent","TextField","fullWidth","id","placeholder","multiline","rows","InputProps","underline","CardActions","cardActions","Button","onClick","undefined","isLoading","Container","Backdrop","backdrop","open","CircularProgress","IconButton","handleThemeToggle","themeButton","gutterBottom","theme","textarea","border","overflow","overflowWrap","resize","height","zIndex","drawer","marginTop","borderBottom","top","right","root","backgroundColor","palette","background","paper","paddingBottom","spacing","fab","destructText","light","NotesList","timeFormater","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","notesItems","note","List","ListItem","button","divider","_id","ListItemText","primary","title","secondary","format","Date","parse","updatedAt","ListItemSecondaryAction","hoursTillDestruct","diff","now","hours","mins","Math","round","floor","timeToLive","Notes","LinearProgress","Fab","aria-label","baseUrl","loadingNotes","loadingState","payload","errorNotes","loadNotes","dispatch","resource","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","Error","status","statusText","json","editNote","addNote","catch","DeleteDialog","Dialog","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogActions","handleDelete","autoFocus","EditNote","onChangeSelfDestruct","touched","onChangeTitle","newNote","onClickTrash","deleteDialogOpen","handleCloseDeleteDialog","match","params","noteId","deleteNote","history","goBack","noteNotFound","paramId","path","saveBottom","space","FormControl","margin","formControl","InputLabel","Select","labelId","MenuItem","iconToRight","connect","noteID","deleteNoteFromStore","marginBottom","minWidth","selectEmpty","marginLeft","deleteIcon","lockIcon","success","main","cardContent","cardMedia","objectFit","typography","whiteSpace","textOverflow","FILE_KNOWN_EXT","filenameToExtImg","filename","ext","pop","toUpperCase","find","e","FilesGrid","dateFormater","Grid","container","file","item","xs","sm","Tooltip","originalname","arrow","CardActionArea","CardMedia","image","Divider","disableSpacing","encrypted","size","openDownloadDialog","bytes","decimals","k","dm","sizes","log","parseFloat","pow","toFixed","fileSizeToString","openDeleteDialog","destroyAt","UploadDialog","handleChange","console","formValues","name","checked","files","handleValidation","formErrors","formValidity","length","encryptChecked","password","handleSubmit","preventDefault","Object","values","every","Boolean","postFiles","isSubmitting","closeButton","onSubmit","DialogContent","TopDialogContent","multiple","hidden","input","htmlFor","uploadFilesButton","FormControlLabel","control","Checkbox","disabled","helperText","paddingTop","grey","DialogContentText","fileId","DownloadDialog","action","loadingFiles","errorFiles","loadFiles","Files","closeDialog","dialogName","openUploadDialog","uploadDialog","deleteDialog","downloadDialog","deleteFile","fetchFiles","upload","startIcon","uploadFormValues","uploadForm","data","FormData","append","addFile","fileID","deleteFileFromStore","display","flexShrink","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","toggleButton","SideDrawer","useTheme","useState","openDrawer","setOpenDrawer","handleDrawerToggle","Drawer","clsx","logo","ListItemIcon","darkTheme","createMuiTheme","lightTheme","Main","ui","setThemeDark","setThemeLight","HomeWithProps","NotesPage","orientation","flexItem","fetchNotes","window","matchMedia","matches","ThemeProvider","CssBaseline","exact","withWidth","flexGrow","combineReducers","concat","createStore","rootReducer","applyMiddleware","thunk","logger","App","store","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.900d6a1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6cd4726c.jpg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles({\r\n img: {\r\n    maxWidth:'300px',\r\n    width: '100%'\r\n },\r\n errorText: {\r\n    textAlign: 'left',\r\n    padding: '8px'\r\n },\r\n freepik: {\r\n    color: 'grey',\r\n    textDecoration: 'none',\r\n    '&&:hover': {\r\n        textDecoration: 'underline',\r\n    }\r\n }\r\n});\r\n\r\nfunction ErrorComp(props) {\r\n    const classes = useStyles();\r\n    \r\n    const errorTitle = props.error.type === 'connection' ? \"Can't reach server...\" : \"Something went wrong...\";\r\n    const errorImg = props.error.type === 'connection' ? \"/server-error.png\" : \"/error.png\";\r\n\r\n\treturn (\r\n        <div>\r\n            <Typography variant=\"subtitle1\" className={classes.typographyTitle}>{errorTitle}</Typography>\r\n            <br />\r\n            <img src={errorImg} alt=\"Error\" className={classes.img}></img>\r\n            <br />\r\n            <Link href=\"http://www.freepik.com\" variant='caption' >Designed by Freepik</Link>\r\n            <br />\r\n            <br />\r\n            <Typography>\r\n                {props.error.message.split(\"\\n\").map((i, key) => {\r\n                    return <p key={key}>{i}</p>;\r\n                })}\r\n            </Typography>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default ErrorComp;","import React from 'react';\r\nimport ErrorComp from './ErrorComponent';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n          hasError: false,\r\n          error: '',\r\n          errorStack: '', \r\n        };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return { hasError: true, error: error };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      this.setState({\r\n        error: error,\r\n        errorStack: errorInfo.componentStack\r\n      });\r\n      // TODO: log error to server\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // render fallback UI\r\n        return(\r\n            <div>\r\n                <br /><br />\r\n                <ErrorComp error={this.state.error}/>\r\n            </div>\r\n        );\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport PermMediaIcon from '@material-ui/icons/PermMedia';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst styles = {\r\n\tstickToBottom: {\r\n\t\twidth: '100%',\r\n\t\tposition: 'fixed', // try: sticky or absolute\r\n\t\tbottom: 0,\r\n\t},\r\n};\r\n\r\nconst pathMap = {\r\n\t'/':\t \t0,\r\n\t'/Home':\t0,\r\n\t'/notes':\t1,\r\n\t'/files':\t2,\r\n}\r\n\r\nclass BottomNav extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tpathIndex: 0,  // Current page index\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\r\n\t\tconst {pathname} = nextProps.location;\r\n\t\tconst newPathIndex = pathMap[pathname];\r\n\t\treturn { pathIndex: newPathIndex };\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t\t<Box boxShadow={2} className={classes.stickToBottom} >\r\n\t\t\t<BottomNavigation showLabels\r\n\t\t\tvalue={this.state.pathIndex}\r\n\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\tthis.setState({ pathIndex: newValue });\r\n\t\t\t}}>\r\n\t\t\t<BottomNavigationAction label=\"Home\" icon={<HomeIcon />}\r\n\t\t\tcomponent={RouterLink} to='/' />\r\n\t\t\t<BottomNavigationAction label=\"Notes\" icon={<NotesIcon />}\r\n\t\t\tcomponent={RouterLink} to='/notes' />\r\n\t\t\t<BottomNavigationAction label=\"Files\" icon={<PermMediaIcon />}\r\n\t\t\tcomponent={RouterLink} to='/files' />\r\n\t\t\t</BottomNavigation>\r\n\t\t\t</Box>\r\n\t\t\t);\r\n\t}\r\n}\r\nexport default withRouter(withStyles(styles)(BottomNav));","import React, { Component } from 'react';\r\nimport ErrorComp from './ErrorComponent';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\nconst styles =  (theme) => ({\r\n\ttextarea: {\r\n\t  border: 'none',\r\n\t  overflow: 'hidden',\r\n\t  overflowWrap: 'break-word',\r\n\t  resize: 'none',\r\n\t  height: '400px',\r\n\t  width:'100%'\r\n\t},\r\n\tbackdrop: {\r\n\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\tcolor: '#fff',\r\n\t},\r\n\ttypographyTitle: {\r\n\t  marginTop:'16px'\r\n\t},\r\n\tunderline: {\r\n\t\t\"&&&:before\": {\r\n\t\t\tborderBottom: \"none\"\r\n\t\t},\r\n\t\t\"&&:after\": {\r\n\t\t\tborderBottom: \"none\"\r\n\t\t}\r\n\t},\r\n\tthemeButton: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: '8px',\r\n\t\tright: '8px',\r\n\t},\r\n});\r\n\r\nclass Home extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcontent: null,\r\n\t\t\tselfDestruct:'',\r\n\t\t };\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\r\n\t\tvar mainNote = nextProps.notes.items.filter(n => n.isMainNote)[0];\r\n\t\tif(prevState.content == null && mainNote){\r\n\t\t\treturn {\r\n\t\t\t\tcontent: mainNote.content,\r\n\t\t\t};\r\n\t\t }\r\n\t\t else\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\r\n\r\n\tonClickSave = () =>{\r\n\t\tconst mainNote = this.props.notes.items.filter(n => n.isMainNote)[0]\r\n\t\tthis.props.postNote({ ...mainNote,\r\n\t\t\tcontent: this.state.content,\r\n\t\t\tselfDestruct: this.state.selfDestruct,\r\n\t\t\tisMainNote: true\r\n\t\t});\r\n\t}\r\n\r\n\tonClickClear = () =>{\r\n\t\tthis.setState({content: ''});\r\n\t}\r\n\r\n\tonChangeContent = event => {\r\n\t\tthis.setState({content: event.target.value});\r\n\t};\r\n\r\n\tisLoading(){\r\n\t\treturn (this.props.notes.isLoading === undefined || this.props.notes.isLoading);\r\n\t}\r\n\r\n\tHomeNote = (props) => {\r\n\t\treturn(\r\n\t\t\t<Card className={props.classes.card} variant=\"outlined\">\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t<TextField  fullWidth\r\n\t\t\t\t\t\tid=\"content\"\r\n\t\t\t\t\t\tplaceholder=\"Type something...\"\r\n\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\trows=\"16\"\r\n\t\t\t\t\t\tInputProps={{ className: props.classes.underline }} \r\n\t\t\t\t\t\tonChange={this.onChangeContent} value={this.state.content}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* <textarea className={classes.textarea} placeholder='Type something...'\r\n\t\t\t\t\t\tonChange={e => this.updateInput(e.target.value)} value={this.state.input} >\r\n\t\t\t\t\t</textarea> */}\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions className={props.classes.cardActions}>\r\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\"\r\n\t\t\t\t\t\tonClick={this.onClickSave}>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button color=\"primary\" onClick={this.onClickClear}>\r\n\t\t\t\t\t\tClear\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n\t\r\n\trender() {\r\n\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<Container maxWidth=\"sm\">\r\n\t\t\t\t<Backdrop className={classes.backdrop} open={this.props.notes.isLoading}>\r\n\t\t\t\t\t<CircularProgress color=\"inherit\" />\r\n\t\t\t\t</Backdrop>\r\n\t\t\t\t<IconButton onClick={this.props.handleThemeToggle} className={classes.themeButton}>\r\n\t\t\t\t\t<Brightness4Icon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Typography variant=\"h2\" gutterBottom className={classes.typographyTitle}>Local Box</Typography>\r\n\t\t\t\t{ this.props.notes.error\r\n\t\t\t\t\t? <ErrorComp error={this.props.notes.error}/>\r\n\t\t\t\t\t: <this.HomeNote classes={classes}/> }\r\n\t\t\t</Container>\r\n\t\t);\r\n\r\n\t}\r\n}\r\nexport default withStyles(styles)(Home);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ErrorComp from './ErrorComponent'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      paddingBottom: (56 + theme.spacing(2))*2,\r\n      height: '100vh'\r\n    },\r\n    typographyTitle: {\r\n      textAlign: 'left',\r\n      padding: theme.spacing(2, 2, 0),\r\n    },\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: 56 + theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n    destructText: {\r\n      color: theme.palette.error.light,\r\n    },\r\n\r\n    img: {\r\n      maxWidth:'300px',\r\n      width: '100%'\r\n   },\r\n   errorText: {\r\n      textAlign: 'left',\r\n      padding: '8px'\r\n   },\r\n\r\n  }));\r\n\r\nconst NotesList = ({notes}) => {\r\n  const classes = useStyles();\r\n\r\n  const timeFormater = new Intl.DateTimeFormat('default', {\r\n    year: 'numeric', month: 'numeric', day: 'numeric',\r\n    hour: 'numeric', minute: 'numeric', \r\n    hour12: false,\r\n  });\r\n  const notesItems = notes.items.filter(note => !note.isMainNote);\r\n\r\n  function timeToLive(updatedAt, hoursTillDestruct){\r\n    const destroyAt = new Date(Date.parse(updatedAt) + hoursTillDestruct*60*60*1000);\r\n    // time untill destruct in miniutes;\r\n    var diff = (destroyAt - Date.now()) / 60000\r\n    var hours = diff/60, mins = Math.round(diff%60);\r\n    if(hours <= 1){\r\n      return mins + 'min';\r\n    }\r\n    else if(hours >= 11.5 || mins === 0 ){ // the time is more then 11 hours\r\n      return Math.round(hours) + ' hours';\r\n    }\r\n    else{\r\n      return Math.floor(hours) + 'h ' + mins + 'min'\r\n    }\r\n  }\r\n\r\n  return(\r\n    <List>\r\n      { notesItems.map(note => (\r\n        <ListItem button divider key={note._id}\r\n          component={RouterLink} to={`/notes/${note._id}`}>\r\n          <ListItemText\r\n          primary={note.title}\r\n          secondary={timeFormater.format(new Date(Date.parse(note.updatedAt)))}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <Typography variant=\"caption\" className={classes.destructText} >\r\n              Delete in<br/>\r\n              {timeToLive(note.updatedAt, note.selfDestruct)}\r\n            </Typography>   \r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        )) } \r\n    </List>\r\n  );\r\n}\r\n\r\n\r\nexport default function Notes({notes}) {\r\n    const classes = useStyles();\r\n\r\n    if( notes.error !== null ){\r\n      // render the error component instead of the notes list\r\n      return(\r\n        <div className={classes.root}>\r\n          <Typography variant=\"h4\" gutterBottom className={classes.typographyTitle}>Notes</Typography>\r\n          <ErrorComp error={notes.error}/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return(\r\n      <div className={classes.root}>\r\n        <Typography variant=\"h4\" gutterBottom className={classes.typographyTitle}>Notes</Typography>\r\n        {notes.isLoading ? <LinearProgress />: <NotesList notes={notes} />}\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}\r\n            component={RouterLink} to='/newNote'>\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n    );\r\n}","export const baseUrl = 'http://192.168.1.12:3000/';","import * as ActionTypes from '../actionTypes';\r\nimport { baseUrl } from '../../baseUrl';\r\n// Action Creators:\r\n\r\nexport const editNote = (note) => ({\r\n    type: ActionTypes.EDIT_NOTE,\r\n    payload: note\r\n})\r\n\r\nexport const loadingNotes = loadingState => ({\r\n  type: ActionTypes.LOADING_STATE_NOTES,\r\n  payload: loadingState\r\n})\r\n\r\nexport const errorNotes = error => ({\r\n  type: ActionTypes.ERROR_NOTES,\r\n  payload: error\r\n})\r\n\r\nexport const fetchNotes = (id) => dispatch => {\r\n    dispatch(loadingNotes(true))\r\n    var url = id ? baseUrl + 'api/notes/' + id : baseUrl + 'api/notes/';\r\n    return fetch(url, {\r\n        method:'GET',\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(json => dispatch(loadNotes(json)))\r\n    .catch(error =>  {\r\n      error.type = 'connection';\r\n      dispatch(errorNotes(error));\r\n    });\r\n}\r\n\r\n\r\n\r\nexport const loadNotes = notes => ({\r\n    type: ActionTypes.LOAD_NOTES,\r\n    payload: notes\r\n  })\r\n\r\nexport const addNote = (note) => ({\r\n        type: ActionTypes.ADD_NOTE,\r\n        payload: note\r\n    })\r\n\r\nexport const deleteNoteFromStore = (noteID) => ({\r\n    type: ActionTypes.DELETE_NOTE,\r\n    payload: noteID\r\n  })\r\n\r\nexport const deleteNote = (noteID) => (dispatch) => {\r\n    dispatch(loadingNotes(true))\r\n    return fetch(baseUrl + 'api/notes/'+noteID, {\r\n        method:'DELETE',\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(deleteNoteFromStore(noteID)))\r\n    .catch(error =>  { \r\n      error.type = 'connection';\r\n      error.message = 'Unable to delete note.\\nError: '+error.message;\r\n      dispatch(errorNotes(error));\r\n    });\r\n}\r\n\r\nexport const postNote = (note) => (dispatch) => {\r\n    dispatch(loadingNotes(true))\r\n    const resource = note._id ? 'api/notes/'+note._id : 'api/notes';\r\n    \r\n    return fetch(baseUrl + resource, {\r\n        method: note._id ? \"PUT\" : 'POST',\r\n        body: JSON.stringify(note),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => note._id ? dispatch(editNote(response)) : dispatch(addNote(response)))\r\n    .catch(error =>  {\r\n      error.type = 'connection';\r\n      error.message = 'Your note could not be posted.\\nError: '+error.message;\r\n      dispatch(errorNotes(error));\r\n    });\r\n};\r\n\r\n\r\n/*\r\nconst shouldFetchPosts = (state, subreddit) => {\r\n  const posts = state.postsBySubreddit[subreddit]\r\n  if (!posts) {\r\n    return true\r\n  }\r\n  if (posts.isFetching) {\r\n    return false\r\n  }\r\n  return posts.didInvalidate\r\n}\r\n\r\nexport const fetchPostsIfNeeded = subreddit => (dispatch, getState) => {\r\n  if (shouldFetchPosts(getState(), subreddit)) {\r\n    return dispatch(fetchPosts(subreddit))\r\n  }\r\n}*/\r\n","// UI Actions:\r\nexport const SET_THEME_LIGHT = \"SET_THEME_LIGHT\";\r\nexport const SET_THEME_DARK = \"SET_THEME_DARK\";\r\n\r\n//Notes ACtions:\r\nexport const ADD_NOTE = \"ADD_NOTE\";\r\nexport const EDIT_NOTE = \"EDIT_NOTE\";\r\nexport const DELETE_NOTE = \"DELETE_NOTE\";\r\nexport const LOAD_NOTES = \"LOAD_NOTES\";\r\nexport const LOADING_STATE_NOTES = \"LOADING_STATE_NOTES\";\r\nexport const ERROR_NOTES = \"ERROR_NOTES\";\r\n\r\n//Files ACtions:\r\nexport const ADD_FILE = \"ADD_FILE\";\r\nexport const DELETE_FILE = \"DELETE_FILE\";\r\nexport const LOAD_FILES = \"LOAD_FILES\";\r\nexport const LOADING_STATE_FILES = \"LOADING_STATE_FILES\";\r\nexport const ERROR_FILES = \"ERROR_FILES\";","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { postNote, deleteNote } from '../redux/ActionCreators/notesActions'\r\nimport ErrorComp from './ErrorComponent'\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst styles = (theme) => ({\r\n    typographyTitle: {\r\n      marginTop:'16px'\r\n    },\r\n    title:{\r\n        marginBottom: '8px',\r\n        marginTop: '-8px'\r\n    },\r\n    underline: {\r\n        \"&&&:before\": {\r\n          borderBottom: \"none\"\r\n        },\r\n        \"&&:after\": {\r\n          borderBottom: \"none\"\r\n        }\r\n      },\r\n    formControl: {\r\n        minWidth: 140,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    saveBottom: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    space: {\r\n        width: '100%',\r\n    },\r\n\r\n  });\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    postNote: (note) => dispatch(postNote(note)),\r\n    deleteNote: (noteID) => dispatch(deleteNote(noteID)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    notes: state.notes\r\n});\r\n\r\n  \r\nfunction DeleteDialog(props){\r\n    return(\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Delete this Note?\"}</DialogTitle>\r\n            {/* <DialogContent></DialogContent> */}\r\n            <DialogActions>\r\n            <Button onClick={props.handleClose} color=\"primary\">\r\n                Cancel\r\n            </Button>\r\n            <Button onClick={props.handleDelete} color=\"primary\" autoFocus>\r\n                Delete\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n      );\r\n}\r\n\r\nclass EditNote extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: null,\r\n            deleteDialogOpen: false,\r\n            selfDestruct: '8',\r\n            title: '',\r\n            content:'',\r\n            touched: false\r\n        }\r\n    }\r\n\r\n    /** Handler for self destruct field in the note */\r\n    onChangeSelfDestruct = event => {\r\n        this.setState({\r\n            selfDestruct: event.target.value,\r\n            touched: true\r\n        });\r\n    };\r\n\r\n    /** Handler for titile of the noe */\r\n    onChangeTitle = event => {\r\n        this.setState({\r\n            title: event.target.value,\r\n            touched: true\r\n        });\r\n    };\r\n\r\n    /** Handler for the content field of the note */\r\n    onChangeContent = event => {\r\n        this.setState({\r\n            content: event.target.value,\r\n            touched: true\r\n        });\r\n    };\r\n\r\n    /** Handler when the users saves a note */\r\n    onClickSave = event => {\r\n        // create the new note object\r\n        const newNote = {\r\n            _id: this.state.id,\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            selfDestruct: this.state.selfDestruct,\r\n        }\r\n\r\n        // dispatch post note to redux and go back to the notes list\r\n        this.props.postNote(newNote);\r\n        //this.props.history.goBack();\r\n    };\r\n\r\n    /** Handler when the user click the trash\\delete */\r\n    onClickTrash = event => {\r\n        this.setState({ deleteDialogOpen:true });\r\n    };\r\n    \r\n    handleCloseDeleteDialog = () => {\r\n        this.setState({deleteDialogOpen:false});\r\n    };\r\n\r\n    handleDelete = () => {\r\n        if(this.props.match.params.noteId)\r\n            this.props.deleteNote(this.props.match.params.noteId)\r\n        this.props.history.goBack();\r\n        this.setState({deleteDialogOpen:false});\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        // if the notes list is still loading, dont change the state\r\n        if(nextProps.notes.isLoading)\r\n            return null;\r\n\r\n        // get note id from url\r\n        const paramId = nextProps.match.params.noteId;\r\n\r\n        // if the url havnt changed\r\n        if( paramId === prevState.id){\r\n            // dont change the state\r\n            return null\r\n        }\r\n        \r\n        // if no id in the url, create empty note\r\n        if(!paramId){\r\n            return prevState.touched ? null : \r\n            {\r\n                id: null,\r\n                selfDestruct: '8',\r\n                title: '',\r\n                content:'',\r\n                touched: false\r\n            };\r\n        }\r\n\r\n        // find the note to edit from the url param\r\n        var note = nextProps.notes.items.filter(n => n._id===paramId)[0];\r\n        if( !note ){     // if no note found\r\n            return {noteNotFound: true};\r\n        }\r\n        else{\r\n            // load the note to state\r\n            return {\r\n                id:             note._id,\r\n                selfDestruct:   note.selfDestruct,\r\n                title:          note.title,\r\n                content:        note.content,\r\n                touched:        false\r\n            };\r\n        } \r\n\t\t\r\n\t}\r\n    \r\n    render() {\r\n\r\n        if(this.state.noteNotFound){\r\n            const paramId = this.props.match.params.noteId;\r\n            const error = new Error('Could not find note with id ' + paramId);\r\n            return(\r\n                <div>\r\n                    <br /><br />\r\n                    <ErrorComp error={error}/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const { classes } = this.props;\r\n\r\n        return(\r\n            <Container maxWidth=\"sm\">\r\n                <Typography variant=\"h4\" gutterBottom className={classes.typographyTitle}>\r\n                    {this.props.match.path === \"/newNote\" ? 'New Note' : 'Edit'}\r\n                </Typography>\r\n                <Card variant=\"outlined\">\r\n                    <CardContent>\r\n                        <TextField fullWidth id=\"title\" label=\"Title\" className={classes.title} \r\n                            onChange={this.onChangeTitle} value={this.state.title} />\r\n                        <TextField  fullWidth\r\n                            id=\"content\"\r\n                            label=\"Note\"\r\n                            placeholder=\"Type something...\"\r\n                            multiline\r\n                            rows=\"15\"\r\n                            InputProps={{ className: classes.underline }} \r\n                            onChange={this.onChangeContent} value={this.state.content}\r\n                        />\r\n                        \r\n                    </CardContent>\r\n                    <CardActions>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.saveBottom}\r\n                        onClick={this.onClickSave}>Save</Button>\r\n                    <div className={classes.space}/>\r\n                    <FormControl margin='dense' variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel id=\"destruct-label\">Self Destruct</InputLabel>\r\n                        <Select\r\n                            labelId=\"destruct-label\"\r\n                            id=\"destructt\"\r\n                            value={this.state.selfDestruct}\r\n                            onChange={this.onChangeSelfDestruct}\r\n                            label=\"Self Destruct\"\r\n                        >\r\n                            <MenuItem value='-1'>Never</MenuItem>\r\n                            <MenuItem value='1'>1 Hour</MenuItem>\r\n                            <MenuItem value='8'>8 Hours</MenuItem>\r\n                            <MenuItem value='24'>24 Hours</MenuItem>\r\n                            <MenuItem value='72'>3 Days</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                        \r\n                        <IconButton aria-label=\"Delete\" className={classes.iconToRight}\r\n                            onClick={this.onClickTrash}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </CardActions>\r\n                </Card>\r\n                <DeleteDialog\r\n                   open={this.state.deleteDialogOpen}\r\n                   handleClose={this.handleCloseDeleteDialog}\r\n                   handleDelete={this.handleDelete} />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n// use redux actions and store\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withStyles(styles)(withRouter(EditNote)));","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { baseUrl } from '../baseUrl';\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    deleteIcon: {\r\n        marginLeft: 'auto',\r\n      },\r\n      lockIcon: {\r\n        color: theme.palette.success.main\r\n      },\r\n      cardContent: {\r\n        paddingBottom: 0\r\n      },\r\n      cardMedia: {\r\n        marginBottom: theme.spacing(1),\r\n        objectFit: \"contain\"\r\n      },\r\n      typography: {\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n      },\r\n      destructText: {\r\n        color: theme.palette.error.light,\r\n      }\r\n}));\r\n\r\n// files extensions that are supported \r\nconst FILE_KNOWN_EXT = ['ACC', 'AE', 'AI', 'AN', 'AVI', 'BMP', 'CSV', 'DAT', 'DGN', 'DOC', 'DOCH', 'DOCM', 'DOCX', 'DOTH', 'DW', 'DWFX', 'DWG', 'DXF', 'DXL', 'EML', 'EPS', 'F4A', 'F4V', 'FILE', 'FLV', 'FS', 'GIF', 'HTML', 'IND', 'JPEG', 'JPG', 'JPP', 'Log', 'LR', 'M4V', 'MBOX', 'MDB', 'MIDI', 'MKV', 'MOV', 'MP3', 'MP4', 'MPEG', 'MPG', 'MPP', 'MPT', 'MPW', 'MPX', 'MSG', 'ODS', 'OGA', 'OGG', 'OGV', 'ONE', 'OST', 'PDF', 'PHP', 'PNG', 'POT', 'POTH', 'POTM', 'POTX', 'PPS', 'PPSX', 'PPT', 'PPTH', 'PPTM', 'PPTX', 'PREM', 'PS', 'PSD', 'PST', 'PUB', 'PUBH', 'PUBM', 'PWZ', 'RAR', 'READ', 'RP', 'RTF', 'SQL', 'SVG', 'SWF', 'TIF', 'TIFF', 'TXT', 'URL', 'VCF', 'VDX', 'VOB', 'VSD', 'VSS', 'VST', 'VSX', 'VTX', 'WAV', 'WDP', 'WEBM', 'WMA', 'WMV', 'XD', 'XLS', 'XLSM', 'XLSX', 'XML', 'ZIP'];\r\n\r\n/**\r\n * Gets a file name and returns a path for an image\r\n * thumbnail of the file based on its extension name.\r\n * If the extension is not suppurted, returns default thumbnail: '/FILE.png'\r\n */\r\nfunction filenameToExtImg(filename) {\r\n    const ext = filename.split('.').pop().toUpperCase();\r\n    if (FILE_KNOWN_EXT.find(e => e === ext))\r\n        return '/img/file-extensions/' + ext + '.png';\r\n    else\r\n        return '/img/file-extensions/FILE.png'\r\n}\r\n\r\n/**\r\n * Calculate how much time left from now until destroyAt date\r\n * returns human readable string\r\n */\r\nfunction timeToLive(destroyAt){\r\n    // time untill destruct in miniutes;\r\n    var diff = (Date.parse(destroyAt) - Date.now()) / 60000\r\n\r\n    var hours = diff/60, mins = Math.round(diff%60);\r\n\r\n    if(hours <= 1){\r\n      return mins + 'min';\r\n    }\r\n    else if(hours >= 11.5 || mins === 0 ){ // the time is more then 11 hours\r\n      return Math.round(hours) + ' hours';\r\n    }\r\n    else{\r\n      return Math.floor(hours) + 'h ' + mins + 'min'\r\n    }\r\n}\r\n\r\n/**\r\n * Converts file size in bytes to pretty string\r\n * @param {Number} bytes     The file size (in bytes)\r\n * @param {Number} decimals  Decimal places to be included in the string (defaul is 2) \r\n */\r\nfunction fileSizeToString(bytes, decimals = 2) {\r\n    if (bytes === 0) return '0 Bytes';\r\n\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n}\r\n\r\n /**\r\n   * Component that renders the files grid\r\n   */\r\nfunction FilesGrid(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tif(props.isLoading){\r\n        return <LinearProgress />\r\n    }\r\n\r\n    const dateFormater = new Intl.DateTimeFormat('default', {\r\n      year: 'numeric', month: 'numeric', day: 'numeric',\r\n      hour: 'numeric', minute: 'numeric',\r\n      hour12: false,\r\n    });\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={3}>\r\n        {props.items.map(file => {\r\n          return (\r\n            <Grid item xs={6} sm={4} key={file._id}>\r\n              <Card>\r\n                <Tooltip title={file.originalname} arrow>\r\n                  <CardActionArea >\r\n                    <CardContent className={classes.cardContent}>\r\n                      <CardMedia component=\"img\" alt=\"File\"\r\n                        title=\"File\" height=\"55\"\r\n                        image={filenameToExtImg(file.originalname)}\r\n                        className={classes.cardMedia}\r\n                      />\r\n                      <Typography className={classes.typography} gutterBottom variant=\"subtitle1\" >\r\n                        {file.originalname}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {dateFormater.format(new Date(Date.parse(file.updatedAt)))}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Tooltip>\r\n                <Divider />\r\n\r\n                <CardActions disableSpacing>\r\n                  {file.encrypted\r\n                    ? <IconButton size=\"small\" className={classes.lockIcon}\r\n                      onClick={props.openDownloadDialog(file.originalname, file._id)}>\r\n                      <LockIcon />\r\n                    </IconButton>\r\n                    : <IconButton component='a' size=\"small\" href={baseUrl + file.path}>\r\n                      <GetAppIcon />\r\n                    </IconButton>}\r\n\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {fileSizeToString(file.size)}\r\n                  </Typography>\r\n\r\n                  <IconButton size=\"small\" className={classes.deleteIcon}\r\n                    onClick={props.openDeleteDialog(file.originalname, file._id)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </CardActions>\r\n\r\n              </Card>\r\n              \r\n              <Typography variant=\"caption\" className={classes.destructText} >\r\n                {file.destroyAt ? 'Delete in '+timeToLive(file.destroyAt) :''}\r\n              </Typography>\r\n            \r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n\t);\r\n}\r\n\r\nexport default FilesGrid;","import React, {Component} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    input: {\r\n        //display: 'none',\r\n    },\r\n    selfDestruct: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    TopDialogContent:{\r\n        \"&&:first-child\":{\r\n            paddingTop: theme.spacing(1),\r\n            paddingBottom:  theme.spacing(2)\r\n        }   \r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n      },\r\n});\r\n\r\n\r\n\r\nclass UploadDialog extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            formValues: {\r\n                files: [],\r\n                encryptChecked: false,\r\n                password: '',\r\n                selfDestruct: '8'\r\n            },\r\n            formErrors: {\r\n                files: \"\",\r\n                password: \"\",\r\n            },\r\n            formValidity: {\r\n                files: false,\r\n                password: true,\r\n            }\r\n        };\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log(target)\r\n        const { formValues } = this.state;\r\n        if(target.name === 'encryptChecked')\r\n            formValues[target.name] = target.checked;\r\n        else if(target.name === 'files')\r\n            formValues[target.name] = target.files;\r\n        else\r\n            formValues[target.name] = target.value;\r\n        console.log(formValues[target.name])\r\n        this.setState({ formValues });\r\n        this.handleValidation(target);\r\n\r\n        //this.setState({ encryptChecked: event.target.checked });\r\n    };\r\n\r\n    handleValidation = target => {\r\n        const { name, value } = target;\r\n        const { formErrors,  formValidity, formValues} = this.state;  \r\n        if(name === 'files'){\r\n            formValidity[name] = formValues[name] !== 0 \r\n            formErrors[name] = formValidity[name] ? \"\" : 'Choose at least one file';\r\n        }\r\n        else if(name === 'password' || name === 'encryptChecked'){\r\n            formValidity['password'] = (value.length >= 4) || !formValues.encryptChecked         \r\n            formErrors['password'] = formValidity['password'] ? \"\" : 'Password should be at least 4 characters';\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            formValues: {\r\n                files: [],\r\n                encryptChecked: false,\r\n                password: '',\r\n                selfDestruct: '8'\r\n            },\r\n            formErrors: {\r\n                files: \"\",\r\n                password: \"\",\r\n            },\r\n            formValidity: {\r\n                files: false,\r\n                password: true,\r\n            }\r\n        });\r\n        this.props.handleClose();\r\n    }\r\n\r\n    // when upload button clicked, dispath POST files to redux\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const { formValues, formValidity } = this.state;\r\n        if (Object.values(formValidity).every(Boolean)) {\r\n          this.props.postFiles(formValues)\r\n          this.props.handleClose();\r\n        }\r\n      };\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        const { formValues, formErrors,formValidity, isSubmitting } = this.state;\r\n        return (\r\n            <Dialog open={this.props.open} onClose={this.handleClose} >\r\n                <DialogTitle id=\"upload-dialog-title\">\r\n                    Upload Files\r\n                    <IconButton className={classes.closeButton}\r\n                        onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>   \r\n                </DialogTitle>\r\n                <form onSubmit={this.props.handleSubmit}>\r\n                <DialogContent className={classes.TopDialogContent}>\r\n                    <input\r\n                        id=\"upload-files-button\"\r\n                        name=\"files\"\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={this.handleChange}\r\n                        hidden\r\n                        className={classes.input}/>\r\n                    <label htmlFor=\"upload-files-button\" >\r\n                        <Button fullWidth variant=\"outlined\" color=\"primary\" size=\"large\" component=\"span\"\r\n                            className={classes.uploadFilesButton}>\r\n                            {\r\n                                formValues.files.length === 1 ? formValues.files[0].name\r\n                                : formValues.files.length > 1 ? formValues.files.length+' Files Selected'\r\n                                : 'Select Files'\r\n                            }\r\n                        </Button>\r\n                    </label>\r\n                    \r\n                </DialogContent>\r\n                <Divider />\r\n                <DialogContent>   \r\n                    <FormControlLabel \r\n                        label=\"Encrypt\" \r\n                        \r\n                        control={\r\n                            <Checkbox name=\"encryptChecked\"\r\n                                checked={formValues.encryptChecked}\r\n                                onChange={this.handleChange}\r\n                                color=\"primary\" />\r\n                            }\r\n                        />\r\n                    \r\n                    <TextField  margin='dense' fullWidth variant=\"filled\"\r\n                        disabled={!formValues.encryptChecked}\r\n                        value={formValues.password}\r\n                        onChange={this.handleChange}\r\n                        error={!formValidity.password}\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        helperText={ !formValidity.password ? formErrors.password :\r\n                            \"If you lose the password, you won't be able to accsess the file\"}          \r\n                    />\r\n                    <FormControl   margin='dense' variant=\"filled\" fullWidth className={classes.selfDestruct}>\r\n                        <InputLabel id=\"destruct-label-2\">Self Destruct</InputLabel>\r\n                        <Select\r\n                            labelId=\"destruct-label-2\"\r\n                            id=\"selfDestruct\"\r\n                            name=\"selfDestruct\"\r\n                            value={formValues.selfDestruct}\r\n                            onChange={this.handleChange}\r\n                            label=\"Self Destruct\" >\r\n                            <MenuItem value='-1'>Never</MenuItem>\r\n                            <MenuItem value='1'>1 Hour</MenuItem>\r\n                            <MenuItem value='8'>8 Hours</MenuItem>\r\n                            <MenuItem value='24'>24 Hours</MenuItem>\r\n                            <MenuItem value='72'>3 Days</MenuItem>\r\n                        </Select>\r\n                    </FormControl>    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"submit\" onClick={this.handleSubmit} color=\"primary\">\r\n                        Upload\r\n                    </Button>\r\n                </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UploadDialog)","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//import { makeStyles } from '@material-ui/core/styles';\r\n/*const useStyles = makeStyles(theme => ({\r\n\r\n}));*/\r\n\r\nfunction DeleteDialog(props) {\r\n\t//const classes = useStyles();\r\n\r\n\t/**\r\n\t * Handler fot DELETE button on the DeleteDialog\r\n\t */\r\n\tconst handleDelete = () => {\r\n\t\t// When the user agree to delete a file,\r\n\t\t// an action deleteFile is dispatched and the dialog closes\r\n\t\tprops.handleDelete(props.fileId)\r\n\t\tprops.handleClose();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen={props.open}\r\n\t\t\tonClose={props.handleClose}\r\n\t\t\taria-labelledby=\"alert-dialog-title\"\r\n\t\t\taria-describedby=\"alert-dialog-description\">\r\n\t\t\t<DialogTitle id=\"dialog-title\">\r\n\t\t\t\t{\"Delete this file?\"}\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<DialogContentText id=\"dialog-description\">\r\n\t\t\t\t\t\tAre you sure you want to delete the file \"{props.filename}\"?\r\n\t\t\t\t</DialogContentText>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button onClick={props.handleClose} color=\"primary\">\r\n\t\t\t\t\tCancel\r\n        \t\t</Button>\r\n\t\t\t\t<Button onClick={handleDelete} color=\"primary\" autoFocus>\r\n\t\t\t\t\tDelete\r\n       \t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n\r\nexport default DeleteDialog;","import React from 'react';\r\nimport { baseUrl } from '../../baseUrl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//import { makeStyles } from '@material-ui/core/styles';\r\n/*const useStyles = makeStyles(theme => ({\r\n\r\n}));*/\r\n/*\r\n\r\n*/\r\n/**\r\n   * Component that renders a dialog \r\n   */\r\n\r\nfunction DownloadDialog(props) {\r\n    //const classes = useStyles();\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.handleClose}>\r\n            <DialogTitle id=\"download-dialog-title\">\r\n                Download Encrypted File\r\n            </DialogTitle>\r\n            <form method=\"post\"\r\n                action={baseUrl + 'api/files/decrypt/' + props.filename}>\r\n                <DialogContent>\r\n                    <input hidden\r\n                        type='text'\r\n                        name='id'\r\n                        value={props.fileId}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                    />\r\n                    <DialogContentText>\r\n                        If you enter the wrong password, the downloaded file will be corrupted.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={props.handleClose}\r\n                        color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        onClick={props.handleClose}\r\n                        color=\"primary\">\r\n                        Download\r\n                    </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default DownloadDialog;","import * as ActionTypes from '../actionTypes';\r\nimport { baseUrl } from '../../baseUrl';\r\n\r\n// Action Creators:\r\n\r\nexport const loadingFiles = loadingState => ({\r\n  type: ActionTypes.LOADING_STATE_FILES,\r\n  payload: loadingState\r\n})\r\n\r\nexport const errorFiles = error => ({\r\n  type: ActionTypes.ERROR_FILES,\r\n  payload: error\r\n})\r\n\r\nexport const fetchFiles = () => dispatch => {\r\n    dispatch(loadingFiles(true))\r\n\r\n  return fetch(baseUrl + 'api/files/', {\r\n      method:'GET',\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(json => dispatch(loadFiles(json)))\r\n  .catch(error =>  { \r\n    error.type = 'connection';\r\n    dispatch(errorFiles(error));\r\n  });\r\n        \r\n}\r\n\r\nexport const loadFiles = files => ({\r\n    type: ActionTypes.LOAD_FILES,\r\n    payload: files\r\n  })\r\n\r\nexport const addFile = (file) => ({\r\n        type: ActionTypes.ADD_FILE,\r\n        payload: file\r\n    })\r\n\r\nexport const deleteFileFromStore = (fileID) => ({\r\n    type: ActionTypes.DELETE_FILE,\r\n    payload: fileID\r\n  })\r\n\r\nexport const deleteFile = (fileID) => (dispatch) => {\r\n    dispatch(loadingFiles(true))\r\n    return fetch(baseUrl + 'api/files/download/'+fileID, {\r\n        method:'DELETE',\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(deleteFileFromStore(response._id)))\r\n    .catch(error =>  { \r\n      error.type = 'connection';\r\n      error.message = 'Unable to delete file\\nError: '+error.message;\r\n      dispatch(errorFiles(error));\r\n    });\r\n}\r\n\r\nexport const postFiles = (uploadForm) => (dispatch) => {\r\n  dispatch(loadingFiles(true))\r\n  const data = new FormData();\r\n  for (const file of  uploadForm.files) {\r\n    data.append('files', file);\r\n  }\r\n  data.append('encrypt', uploadForm.encryptChecked);\r\n  data.append('password', uploadForm.password);\r\n  data.append('selfDestruct', uploadForm.selfDestruct);\r\n  \r\n  fetch(baseUrl + \"api/files/upload\", {\r\n        method: 'POST',\r\n        headers: { 'Accept': 'application/json' },\r\n        body: data\r\n  })\r\n  .then(response => {\r\n    if (response.ok) {\r\n      return response;\r\n    } else {\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  },\r\n  error => {\r\n        throw error;\r\n  })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addFile(response)))\r\n  .catch(error =>  { \r\n      error.type = 'connection';\r\n      error.message = 'Your file could not be posted\\nError: '+error.message;\r\n      dispatch(errorFiles(error));\r\n  });\r\n   \r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport FilesGrid from './FilesGridComponent';\r\nimport ErrorComp from './ErrorComponent';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport UploadDialog from './Dialogs/UploadDialog';\r\nimport DeleteDialog from './Dialogs/DeleteDialog';\r\nimport DownloadDialog from './Dialogs/DownloadDialog';\r\nimport { connect } from \"react-redux\";\r\nimport { postFiles, deleteFile, fetchFiles } from '../redux/ActionCreators/filesActions'\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nconst styles = (theme) => ({\r\n  typographyTitle: {\r\n    textAlign: 'left',\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  root: {\r\n    paddingBottom: 56 + theme.spacing(2),\r\n  },\r\n  uploadFilesButton: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchFiles: () => dispatch(fetchFiles()),\r\n  postFiles: (uploadFormValues) => dispatch(postFiles(uploadFormValues)),\r\n  deleteFile: (fileID) => dispatch(deleteFile(fileID)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  files: state.files\r\n});\r\n\r\n\r\n/**\r\n * Class component for the 'Files' page,\r\n * where the user can upload, download and\r\n * delete files from the server\r\n */\r\nclass Files extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      downloadDialog: {\r\n        open: false,\r\n        handleClose: this.closeDialog('downloadDialog'),\r\n        fileId:   '',\r\n        filename: '',\r\n      },\r\n\r\n      deleteDialog: {\r\n        open: false,\r\n        handleClose: this.closeDialog('deleteDialog'),\r\n        handleDelete: this.props.deleteFile,\r\n        fileId:   '',\r\n        filename: '',\r\n      },\r\n\r\n      uploadDialog: {\r\n        open: null,\r\n        handleClose: this.closeDialog('uploadDialog'),\r\n        postFiles: this.props.postFiles\r\n      },\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // fetch files record from the server\r\n    this.props.fetchFiles()\r\n\r\n    // if url is /file/upload open the upload dialog\r\n    if(this.props.upload){\r\n      this.openUploadDialog();\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * A function that gets a dialog name and returns\r\n   * a funciton that closes that dialog\r\n   */\r\n  closeDialog = (dialogName) => () => {\r\n    this.setState(state => {\r\n      return {\r\n        [dialogName]: {\r\n          ...state[dialogName],\r\n          open: false,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handler to open UploadDialog component\r\n   * (When UPLOAD FILES is clicked)\r\n   */\r\n  openUploadDialog = () => {\r\n    this.setState(state => {\r\n      return {\r\n        uploadDialog: {\r\n          ...state.uploadDialog,\r\n          open: true,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handler to open DeleteDialog component\r\n   * (When the trash can icon is clicked)\r\n   */\r\n  openDeleteDialog = (filename, fileId) => () => {\r\n    this.setState(state => {\r\n      return {\r\n        deleteDialog: {\r\n          ...state.deleteDialog,\r\n          open:     true,\r\n          fileId:   fileId,\r\n          filename: filename,\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handler to open DownloadDialog component\r\n   * (When the lock icon of an encrypted file is clicked)\r\n   */\r\n  openDownloadDialog = (filename, fileId) => () =>{\r\n    this.setState(state => {\r\n      return {\r\n        downloadDialog: {\r\n          ...state.downloadDialog,\r\n          open:     true,\r\n          fileId:   fileId,\r\n          filename: filename,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    \r\n    if( this.props.files.error !== null ){\r\n      return(\r\n        <div className={classes.root}>\r\n          <Typography variant=\"h4\" gutterBottom className={classes.typographyTitle}>Files</Typography>\r\n          <ErrorComp error={this.props.files.error}/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container className={classes.root} maxWidth='sm'>\r\n        <Typography variant=\"h4\" gutterBottom className={classes.typographyTitle}>Files</Typography>\r\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={this.openUploadDialog}\r\n          startIcon={<CloudUploadIcon />} className={classes.uploadFilesButton}>\r\n          Upload Files\r\n        </Button>\r\n        <FilesGrid\r\n          isLoading={this.props.files.isLoading}\r\n          items={this.props.files.items}\r\n          openDeleteDialog={this.openDeleteDialog}\r\n          openDownloadDialog={this.openDownloadDialog}\r\n          />\r\n        <DownloadDialog {...this.state.downloadDialog}/>\r\n        <DeleteDialog   {...this.state.deleteDialog}  />\r\n        <UploadDialog   {...this.state.uploadDialog}  />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// use rredux actions and store\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Files));","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PermMediaIcon from '@material-ui/icons/PermMedia';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport logo from '../img/logo.jpg'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n\r\n  //drawer\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7),\r\n  },\r\n  //close drawer buttn\r\n  toggleButton:{\r\n    position: 'absolute',\r\n    top:0,\r\n    right: 0,\r\n  },\r\n\r\n}));\r\n\r\nexport default function SideDrawer(props) {\r\n  const classes = useStyles(props);\r\n  const theme = useTheme();\r\n\r\n  const [openFiles, setOpenFiles] = React.useState(false);\r\n  const [openDrawer, setOpenDrawer] = React.useState(true);\r\n\r\n  const handleAddFile = () => {\r\n    setOpenFiles(!openFiles);\r\n  };\r\n\r\n  const handleDrawerToggle = () => {\r\n    setOpenDrawer(!openDrawer);\r\n  };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <Drawer\r\n        onClose={handleDrawerToggle}\r\n        variant='permanent'\r\n        className={clsx(`${classes.drawer}`, {\r\n          [`${classes.drawerOpen}`]: openDrawer,\r\n          [classes.drawerClose]: !openDrawer,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [`${classes.drawerOpen}`]: openDrawer,\r\n            [classes.drawerClose]: !openDrawer,\r\n          }),\r\n        }}\r\n      >\r\n\r\n        <img src={logo} alt='Logo' width='100%' />\r\n        <IconButton onClick={handleDrawerToggle} className={classes.toggleButton}>\r\n          {openDrawer ? <ChevronLeftIcon /> : <ChevronRightIcon /> }\r\n        </IconButton>\r\n\r\n        <Divider />\r\n        <List>\r\n            <ListItem button key='add' component={RouterLink} to='/newNote' >\r\n              <ListItemIcon><AddIcon /></ListItemIcon>\r\n              <ListItemText primary='Add Note' />\r\n            </ListItem>\r\n\r\n            <ListItem button key='home' component={RouterLink} to='/'>\r\n              <ListItemIcon><HomeIcon /></ListItemIcon>\r\n              <ListItemText primary='Home' />\r\n            </ListItem>\r\n  \r\n\r\n            <ListItem button key='notes' component={RouterLink} to='/notes' >\r\n              <ListItemIcon><NotesIcon /></ListItemIcon>\r\n              <ListItemText primary='Notes' />\r\n            </ListItem>\r\n\r\n            <ListItem button key='files' component={RouterLink} to='/files' >\r\n              <ListItemIcon><PermMediaIcon /></ListItemIcon>\r\n              <ListItemText primary='Files' />\r\n              <IconButton component={RouterLink}  to='/files/upload' >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n            <ListItem button key='setting'>\r\n              <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n              <ListItemText primary='Setting' />\r\n            </ListItem>\r\n        </List>\r\n      </Drawer>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React,{Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ErrorBoundary from './ErrorBoundary'\r\nimport BottomNav from './BottomNavComponent'\r\nimport Home from './HomeComponent'\r\nimport Notes from './NotesComponent'\r\nimport EditNote from './EditNoteComponent'\r\nimport Files from './FilesComponent'\r\nimport SideDrawer from './DrawerComponent'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {postNote, fetchNotes} from '../redux/ActionCreators/notesActions'\r\nimport {setThemeDark, setThemeLight} from '../redux/ActionCreators/uiActions'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst styles =  (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        //padding: theme.spacing(3),\r\n      },\r\n     \r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchNotes: () => dispatch(fetchNotes()),\r\n    postNote: (note) => dispatch(postNote(note)),\r\n    setThemeDark: () => dispatch(setThemeDark()),\r\n    setThemeLight: () => dispatch(setThemeLight()),\r\n});\r\n\r\nconst darkTheme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: { main: '#00838F' },\r\n        secondary: { main: '#445963' }\r\n    },\r\n  });\r\nconst lightTheme = createMuiTheme({\r\n    palette: {\r\n        type: \"light\",\r\n        primary: { main: '#00838F' },\r\n        secondary: { main: '#445963' }\r\n    },\r\n});\r\n\r\nclass Main extends Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n        drawerOpen: this.props.width === 'xs' ? false : true,\r\n      }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('fetchNotes() in componentDidMount of Main')\r\n    this.props.fetchNotes()\r\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n        this.props.setThemeDark()\r\n    }\r\n  }\r\n\r\n\r\n  handleThemeToggle = () => {\r\n     // alert('theme = ~' + this.props.ui.theme+'~')\r\n    if(this.props.ui.theme === 'light')\r\n        this.props.setThemeDark()\r\n    else\r\n        this.props.setThemeLight()\r\n  }\r\n\r\n  HomeWithProps = () => {\r\n      return(\r\n        <Home handleThemeToggle={this.handleThemeToggle}\r\n            notes={this.props.notes}\r\n            postNote={this.props.postNote}/>\r\n      );\r\n  }\r\n\r\n  NotesPage = (props) => {\r\n      if(this.props.width === 'xs'){\r\n          return props.path === 'notes' ? <Notes notes={this.props.notes}/> : <EditNote/> \r\n      }\r\n      else{\r\n          return(\r\n            <Grid container>\r\n                <Grid item xs={4}>\r\n                    <Notes notes={this.props.notes}/>\r\n                </Grid>\r\n                <Divider orientation=\"vertical\" flexItem />\r\n                <Grid item xs={7}>          \r\n                    { props.path === 'notes' ? null : <EditNote/> }\r\n                </Grid>\r\n            </Grid>\r\n          );\r\n      }\r\n  }\r\n\r\n  \r\n  render(){\r\n    var theme = this.props.ui.theme === 'dark' ? darkTheme : lightTheme;\r\n    const { classes } = this.props;\r\n    // ISSUE: does not re render when theme changes\r\n    return(\r\n        <ThemeProvider theme={theme}>\r\n            <Router>\r\n                <CssBaseline />\r\n                <div className={classes.root}>\r\n                    {this.props.width === 'xs' ? <BottomNav /> : <SideDrawer /> }\r\n                    <div className={classes.content}>\r\n                    <ErrorBoundary>\r\n                    <Switch>\r\n                        <Route path=\"/home\">\r\n                            <this.HomeWithProps/>\r\n                        </Route>\r\n\r\n                        <Route path='/notes/:noteId'>\r\n                            <this.NotesPage path={'editNote'} />\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/notes\">\r\n                            <this.NotesPage path={'notes'} />\r\n                        </Route>\r\n                        \r\n                        <Route path=\"/newNote\">\r\n                            <this.NotesPage path={'newNote'} />\r\n                        </Route>\r\n\r\n                        <Route path=\"/files/upload\">\r\n                            <Files upload={true}/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/files\">\r\n                            <Files />\r\n                        </Route>  \r\n\r\n                        <Route path=\"/\">\r\n                            <this.HomeWithProps/>\r\n                        </Route>\r\n                    </Switch>\r\n                    </ErrorBoundary>\r\n                    </div>\r\n                </div>\r\n            </Router>     \r\n        </ThemeProvider>\r\n    );\r\n\r\n\r\n  }\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withWidth()(withStyles(styles)(Main)));\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\n// Action Creators:\r\n\r\nexport const setThemeLight = () => ({\r\n    type: ActionTypes.SET_THEME_LIGHT,\r\n})\r\n\r\nexport const setThemeDark = () => ({\r\n    type: ActionTypes.SET_THEME_DARK,\r\n})\r\n","import { combineReducers } from \"redux\";\r\nimport * as ActionTypes from '../actionTypes';\r\nimport notes from \"./notes\";\r\nimport files from \"./files.js\";\r\n\r\n\r\nfunction ui(state = {theme:'light'}, action) {\r\n    switch (action.type) {\r\n\r\n      case ActionTypes.SET_THEME_DARK: {\r\n        return {...state, theme: 'dark'};\r\n      }\r\n      case ActionTypes.SET_THEME_LIGHT: {\r\n        return {...state, theme: 'light'};\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\nexport default combineReducers({ notes, files, ui });\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport default function(state = {items:[],isLoading: true, error:null}, action) {\r\n    switch (action.type) {\r\n\r\n      case ActionTypes.ERROR_NOTES: {\r\n        return {\r\n            ...state,\r\n            error: action.payload,\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.ADD_NOTE: {\r\n        return {\r\n            ...state,\r\n            items: state.items.concat(action.payload),\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.EDIT_NOTE: {\r\n        return {\r\n            ...state,\r\n            items: state.items.map(note => note._id===action.payload._id ? action.payload : note ),\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.DELETE_NOTE: {\r\n        return {\r\n            ...state,\r\n            items: state.items.filter(note => note._id !== action.payload),\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.LOADING_STATE_NOTES: {\r\n        return {\r\n            ...state,\r\n            isLoading: action.payload\r\n        };\r\n      }\r\n\r\n      case ActionTypes.LOAD_NOTES: {\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }","import * as ActionTypes from '../actionTypes';\r\n\r\nexport default function(state = {items:[],isLoading: true, error:null}, action) {\r\n    switch (action.type) {\r\n\r\n      case ActionTypes.ERROR_FILES: {\r\n        return {\r\n            ...state,\r\n            error: action.payload,\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.ADD_FILE: {\r\n        return {\r\n            ...state,\r\n            items: state.items.concat(action.payload),\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.DELETE_FILE: {\r\n        return {\r\n            ...state,\r\n            items: state.items.filter(file => file._id!==action.payload),\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n      case ActionTypes.LOADING_STATE_FILES: {\r\n        return {\r\n            ...state,\r\n            isLoading: action.payload\r\n        };\r\n      }\r\n\r\n      case ActionTypes.LOAD_FILES: {\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            isLoading: false\r\n        };\r\n      }\r\n\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { createStore, applyMiddleware  } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nexport default createStore(rootReducer,\r\n    applyMiddleware(thunk, logger));\r\n","import React from 'react';\nimport './App.css';\nimport Main from './components/MainComponent'\nimport 'typeface-roboto';\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store.js'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Main />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}